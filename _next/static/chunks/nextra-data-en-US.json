{"/dev-tools":{"title":"Development Tools","data":{}},"/dev-tools/fivem-lib":{"title":"Trusted-Studios FiveM Lib","data":{"":"The Trusted-Studios FiveM Lib provides many functions used in our scripts. Those where crafted over many years and exists to increase productivity. Even tho we work with our own lib, we recomend using ox_lib as it is much more complete and provides a wide range of tools unavailable in ours.","todo-list#TODO List:":"Game\nVisual\nCallback\nScaleforms\nText\nTimerBars\nFiles\nTime\nAsync\nMath\nNode\nWeb"}},"/dev-tools/fivem-lib/Lua/bars":{"title":"Native Bars","data":{"create#Create":"Creates a new Bar object and returns its.\nBars:Create(index)\nindex: number | nil\nexample:\nlocal newBar = Bars:Create(1)","progressbar#ProgressBar":"Triggers a progressbar. Can only be used with a created object.\nBars:ProgressBar(time)\ntime: number\nexample:\nnewBar:ProgressBar(60)","isready#IsReady":"Returns if the progressbar has been completed.\nBars:IsReady()\nexample:\nrepeat Wait(0) until newBar:IsReady()","textbar#TextBar":"Renders a simple text bar.\nBars:TextBar(text)\ntext: string\nexample:\nwhile true do\n    Wait(0)\n    newBar:TextBar('This is a Text')\nend","infobar#InfoBar":"Renders an info bar with an title and text content.\nBars:InfoBar(titleText, text)\ntitleText: string\ntext: string\nexample:\nwhile true do\n    Wait(0)\n    newBar:InfoBar('Points:', '2')\nend","timerbar#TimerBar":"Renders a GTA:O timer bar.\nBars:TimerBar(label, time, unit)\nlabel: string\ntime: number\nunit: string\nexample:\nlocal time = 60 \nCreateThread(function()\n    while time >= 0 do\n        time -= 1\n        Wait(1000)\n    end\nend)\nwhile time >= 0 do\n    Wait(0)\n    newBar:TimerBar('Time remaining:', time, 'Sek.')\nend","percentbar#PercentBar":"Renders a percentbar. Looks like the Progressbar but doesnt update any values.\nBars:PercentBar(label, percent)\nlabel: string\npercent: number\nexample:\nwhile true do\n    Wait(0)\n    newBar:PercentBar('Health', 80)\nend","coloredpercentbar#ColoredPercentBar":"Renders a colored percentbar. Looks like the Progressbar but doesnt update any values.\nBars:ColoredPercentBar(label, percent, r, g, b)\nlabel: string\npercent: number\nr: number\ng: number\nb: number\nexample:\nwhile true do\n    Wait(0)\n    newBar:ColoredPercentBar('Health', 80, 255, 255, 255)\nend"}},"/dev-tools/fivem-lib/Lua/callback":{"title":"Callback","data":{"":"Callback:Trigger(eventName, callback, ...)\neventName: string\ncallback: function\nargv: any\nexample:\nCallback:Trigger('Trusted:lib:TestEvent', function(callbackValue)\n    print(callbackValue)\nend, arg1, arg2)\nCallback:Register(eventName, callback)\neventName: string\ncallback: function\nexample:\nCallback:Register('Trusted:lib:TestEvent', function(source, callbackValue, arg1, arg2)\n    callbackValue(arg1 + arg2)\nend)"}},"/dev-tools/fivem-lib/Lua/game":{"title":"Game","data":{"addadvancedmarker#AddAdvancedMarker":"Adds a marker to the world at the given coords. Can be customized a bit more than Game.AddMarker.\nGame.AddAdvancedMarker(id, coords, r, g, b, a, rotation)\nid: number\ncoords: vec3 | vec4\nr: number\ng: number\nb: number\na: number\nThis function has to be called every tick.\nexample:\nwhile true do\n    Wait(0)\n    Game.AddAdvancedMarker(1, vec3(10.0, 245.0, 130.0), 255, 255, 255, 255, vec3(0.0, 0.0, 180.0))\nend","addblip#AddBlip":"Creates a new blip and returns its id.\nlocal blip = Game.AddBlip(x, y, z, id, scale, color, enableWaypoint, blipLabel, shortRange)\nx: number | vec3 | vec4\ny: number\nz: number\nid: number\nscale: number\ncolor: number\nenableWaypoint: boolean\nblipLabel: string | nil\nshortRange: boolean | nil\nexample:\nTODO","addmarker#AddMarker":"Adds a simple GTA:O Marker to the world at the given coords.\nGame.AddMarker(x, y, z)\nx: number | vec3 | vec4\ny: number | nil\nz: number | nil\nThis function has to be called every tick.\nexample:\nTODO","addradiusblip#AddRadiusBlip":"Creates a new radius blip and returns its id.\nGame.AddRadiusBlip(x, y, z, id, scale, color, enableWaypoint, blipLabel, shortRange)\nx: number\ny: number\nz: number\nid: number\nscale: number\ncolor: number\nenableWaypoint: boolean\nblipLabel: string\nshortRange: boolean\nexample:\nTODO","deletevehicle#DeleteVehicle":"Checks if the passed entity is a vehicle and deletes it if true.\nGame.DeleteVehicle(vehicle)\nvehicle: number\nexample:\nlocal vehicle = GetVehiclePedIsIn(PlayerPedId(), false)\nGame.DeleteVehicle(vehicle)","getadvancedforwardfield#GetAdvancedForwardField":"Calculates the foward field of an entity and with an multiplier.\nGame.GetAdvancedForwardField(entity, multiplier)\nentity: number\nmultiplier: number\nThis function will soon be rewritten. Avoid using it.","getadvancedsidefieldfromheading#GetAdvancedSideFieldFromHeading":"Calculates the side field based on a givin heading and returns it with an optional multiplier.\nGame.GetAdvancedSideFieldFromHeading(h, side, multiplier)\nh: number\nside: string<'left' | 'right'>\nmultiplier: number\nexample:\nlocal ped = PlayerPedId()\nlocal coords = GetEntityCoords(ped)\nlocal sideField = Game.GetAdvancedSideField(GetEntityHeading(ped), 'left', 2)\nprint(coords + vec3(sideField.x, sideField.y, 0))","isnearcoords#IsNearCoords":"Returns if the given ped is near the target coords based on the rquired distance.\nGame.IsNearCoords(ped, targetCoords, distance, reverse)\nped: number\ntargetCoords: number\ndistance: number\nreverse: boolean\nexample:\nif Game.IsNearCoords(PlayerPedId(), vec3(230.0, 345.01, 50.2), 4, false) then\n    print('Player is near target coords.')\nend","isnearwater-credits#IsNearWater Credits":"Checks of the ped is near a water source.\nGame.IsNearWater(ped)\nped: number\nlocal isNearWater, waterCoords = Game.IsNearWater(PlayerPedId())","playanimation#PlayAnimation":"Plays an animation to the player ped.\nGame.PlayAnimation(animDict, animName, flag)\nanimDic: string\nanimName: string\nflag: number\nGame.PlayAnimation('missheistdocksprep1hold_cellphone', 'static', 48)","spawnobjectatcoords#SpawnObjectAtCoords":"Spawns a new object and returns it entity id.\nGame.SpawnObjectAtCoords(modelHash, x, y, z, h, isNetwork)\nmodelHash: hash\nx: number\ny: number\nz: number\nh: number\nisNetwork: boolean\nlocal object <const> = Game.SpawnObjectAtCoords('prop_security_case_01', GetEntityCoords(PlayerPedId()), true)","spawnped#SpawnPed":"Spawns a new ped and returns its entity id.\nGame.SpawnPed(ped, x, y, z, h, freeze, isNetwork)\nped: number\nx: number\ny: number\nz: number\nh: number\nfreeze: boolean\nisNetwork: boolean\nlocal newPed = Game.SpawnPed('s_m_m_armoured_01', vec3(234.23, 645.1, 23.6), true, false)","spawnvehicle#SpawnVehicle":"Creates a new vehicle and returns its entity id.\nGame.SpawnVehicle(name, inVeh, coords)\nname: string\ninVeh: boolean\ncoords: vec3 | vec4\nGame.SpawnVehicle('stockade', true, vec3(234.1, 544.4, 40.2))"}},"/dev-tools/fivem-lib/Lua/text":{"title":"Text","data":{"displaytext#DisplayText":"Renders basic text on the screen.\nText.DisplayText(x, y, width, height, scale, text, r, g, b, a)\nx: number\ny: number\nwidth: number\nheight: number\nscale: number\ntext: string\nr: number\ng: number\nb: number\na: number\nexample:\nTODO","minimaltextdisplay#MinimalTextDisplay":"Renders basic text on the screen with a set text wrap.\nText.MinimalTextDisplay(x, y, width, height, scale, text, r, g, b, a, textWrap)\nx: number\ny: number\nwidth: number\nheight: number\nscale: number\ntext: string\nr: number\ng: number\nb: number\na: number\ntextWrap: number\nexample:\nTODO"}},"/dev-tools/fivem-lib/Lua/visual":{"title":"Visual","data":{"addlongstring#AddLongString":"Is used with ShowHelpLongString to increase the string length.\nVisual.AddLongString(text)\ntext: string","bottomtext#BottomText":"Adds a basic GTA bottom print.\nVisual.BottomText(text, time)\ntext: string\ntime: number\nexample:\nwhile true do\n    Wait(0)\n    Visual.BottomText('This is a bottom text')\nend\nresmon: ~0.05ms\nwhile true do\n    Visual.BottomText('This is a bottom text', 2500)\n    Wait(2450)\nend\nresmon: 0.00ms","draw3dtext#Draw3DText":"Renders 3d text.\nVisual.Draw3DText(text, coords)\ntext: string\ncoords: table | vec3\nThis function has to be called every tick.\nexample\nwhile true do\n    Wait(0)\n    Visual.Draw3DText('This is a 3D Text', vec3(323.3, 13.45, 56.76))\nend","drawprogressbar#DrawProgressBar":"Draws a new progress bar.\nVisual.DrawProgressBar(x, y, width, height, r, g, b, a)\nx: number\ny: number\nwidth: number\nheight: number\nr: number\ng: number\nb: number\na: number\nexample:\nTODO","dynamicscreen#DynamicScreen":"Is used to properly set the screen x coordinates of an native element based on the active screen resolution.\nVisual.DynamicScreen(offsetX)\noffsetX: number\nexample:\nTODO","iconnotify#IconNotify":"Displays GTA notification with an icon.\nVisual.IconNotify(textureDict, textureName, title, subtitle, text)\ntextureDict: string\ntextureName: string\ntitle: string\nsubtitle: string\ntext: string\nexample:\nTODO","inputbox#InputBox":"Basic GTA input field.\nVisual.InputBox(displayText, bitLenght)\ndisplayText: string\nbitLenght: number\nexample:\nTODO","mugnotify#MugNotify":"Displays GTA notification with a mugshot of the player.\nVisual.MugNotify(message, gainedRP, color)\nmessage: string\ngainedRP: number\ncolor: number\nexample:\nTODO","notify#Notify":"Simple GTA notification without any fancy stuff. Just text.\nVisual.Notify(text)\ntext: string\nexample:\nVisual.Notify('This is a new notification!')","rendersprite#RenderSprite":"Renders new sprite.\nVisual.RenderSprite(txdDict, txdName, x, y, width, height, heading, r, g, b, a)\ntxdDict: string\ntxdName: string\nx: number\ny: number\nwidth: number\nheight: number\nheading: number\nr: number\ng: number\nb: number\na: number\nexample:\nTODO","showhelp#ShowHelp":"Adds a basic GTA help notification in the top left side of screen.\nVisual.ShowHelp(text, bleep)\ntext: string\nbleep: boolean\nexample:\nVisual.ShowHelp('This is a help notification, press ~INPUT_CONTEXT~ to accept TOS!', true)","showhelplongstring#ShowHelpLongString":"Adds a basic GTA help notification in the top left side of screen. Can display an infinite string length.\nVisual.ShowHelp(text, bleep)\ntext: string\nbleep: boolean\nexample:\nVisual.ShowHelpLongString('This is a very, very, very, veeeeeeerryyyyy long help notification, press ~INPUT_CONTEXT~ to accept TOS!', true)"}},"/dev-tools/fivem-lib/web/components":{"title":"Web Components","data":{}},"/dev-tools/weapons/addon":{"title":"Work In Progress","data":{"how-to-create-add-on-weapons#How to create Add-On Weapons?":""}},"/fivem":{"title":"FiveM Information","data":{"":"More in-depth guides about various FiveM topics will be added over time.","fivem-blips#FiveM Blips":"All information about FiveM blips can be found on the following page: FiveM Blips","fivem-peds#FiveM Peds":"All information about FiveM Peds can be found on the following page: FiveM Peds"}},"/fivem/basic-carkeys":{"title":"Basic Carkeys","data":{}},"/fivem/basic-carkeys/1_Introduction":{"title":"FiveM Farming Plus Script","data":{"":"A Simple Script allowing players to lock & unlock their owned vehicles.","installation#Installation":"","download#Download":"Download the script from GitHub","installation-1#Installation":"Drag and Drop the resource into your server-files and go to the configuration file located at /conig.lua.","configuration#Configuration":"Please make sure to configure the script to your need to ensure the best experience. More information can be found here."}},"/fivem/basic-carkeys/2_Config":{"title":"Configurations","data":{"":"Adjust the script to your need!","default-lock-key#Default Lock Key":"Defines the key that needs to be pressed to lock/unlock cars.\nConfig.DefaultLockKey = \"i\"\nDefaultLockKey: string","lock-distance#Lock Distance":"What is the maximum distance from wich a player can lock/unlock his car.\nConfig.LockDistance = 3\nLockDistance: number (in meters)"}},"/fivem/basic-farming/2_Config":{"title":"Configuration","data":{"":"Please keep in mind that this script is extremely old and that past GMW had just begun writing FiveM scripts in Lua. If you want a knew and better version with way more features, please check out Farming Plus","menu-position#Menu Position":"Change the position of the interaction menu.\nConfig.MenuPosition = \"right\"\nConfig.MenuPosition = \"left\"\nMenuPosition: string","enable--disable-blips#Enable / Disable Blips":"Choose wether you want your players to see a Blip revealing the farming locations or not.\nConfig.BlipEnable = true\nConfig.BlipEnable = false\nBlipEnable: boolean","farming-locations--options#Farming Locations & Options":"This is the most important part of this config, as these lines define the farming locations and their options.\nAs you will see down below, some variables and their names doesn't make any sense. This is due to the lack of knowledge GMW had when he wrote this script (2021). This WILL NOT affect the end result at all. It's just a bit cringe.\nConfig.Farm = {\n    Type = {\n        {\n            Label = \"Salad\", \n            Value = \"salad\", \n            BlipLabel = \"Salad Plantation\", \n            Anim = \"world_human_gardener_plant\", \n            BlipNumber = 208, \n            Time = 20000, \n            Count = 5, \n            coords = vec3(1956.4, 4797.42, 43.62)\n        },\n    }\n}\nFarm: table\nType: table (don't ask the script is old...)\nLabel: string\nValue: string\nBlipLabel: string\nAnim: string\nBlipNumber: number\nTime: number (in ms)\nCount: number\ncoords: vec3\nExample:\n{Label = \"Salad\", Value = \"salad\", BlipLabel = \"Salad Plantation\", Anim = \"world_human_gardener_plant\", BlipNumber = 208, Time = 20000, Count = 5, coords = vec3(1956.4, 4797.42, 43.62)},","shops#Shops":"Farming Items without beeing able to sell then woudn't make any sense. This is why you can configure your shops right here!\nConfig.Shop = {\n    Pos = {\n        {BlipLabel = 'Händler', Coords = vec4(386.06, -326.16, 46.87,160.01)}, \n    }, \n    Items = {              \n        {Label = \"Salad\", Value = \"salad\", Price = 8},\t\n    }\n}\nShop: table\nPos: table\nBlipLabel: string\nCoords: vec4\nExample:\n{BlipLabel = 'Händler', Coords = vec4(386.06, -326.16, 46.87,160.01)},\nItems: table\nLabel: string\nValue: string\nPrice: number\nExample:\n{Label = \"Salad\", Value = \"salad\", Price = 8},"}},"/fivem/basic-farming":{"title":"FiveM Basic Farming","data":{}},"/fivem/basic-farming/1_Introduction":{"title":"FiveM Basic Flares","data":{"":"The FiveM Basic Farming Script is suitable for any server. It offers numerous configuration options that allow users to customize the script according to their specific needs. Whether it's resource gathering or selling, this indispensable script automates and optimizes farming activities.","installation#Installation":"","download#Download":"Download the Script from GitHub by using the following Link","installation-1#Installation":"Drag and Drop the resource into your server-files and go to the configuration file located at /conig.lua.","configuration#Configuration":"Please make sure to configure the script to your need to ensure the best experience. More information can be found here."}},"/fivem/basic-flares":{"title":"FiveM Basic Flares","data":{}},"/fivem/basic-flares/1_Introduction":{"title":"FiveM Basic Flares","data":{"":"\"Basic Flares\" is a FiveM script that allows aircraft and helicopters to deploy countermeasures. These flares divert incoming enemy missiles, enhancing the survival chances of the aircraft by disrupting target locking. This script adds to the dynamics of aerial combat and enriches gameplay within FiveM.","installation#Installation":"","download#Download":"Download the Script from GitHub by using the following Link","installation-1#Installation":"Drag and Drop the resource into your server-files and go to the configuration file located at /conig.lua.","configuration#Configuration":"Please make sure to configure the script to your need to ensure the best experience. More information can be found here."}},"/fivem/basic-flares/2_Config":{"title":"Configurations","data":{"":"To provide the best experience with the Flares script we've made shure you can adjust the script to your needs.","flare-speed#Flare Speed:":"This changes the speed of the projectile.\nConfig.Speed =  -1\nSpeed: number","flare-interval#Flare Interval:":"The interval of each projectile determined in ms.\nConfig.FlareInterval = 500\nFlareInterval: number","flare-model-whitelist#Flare Model Whitelist:":"A list of vehicles that can use flares.\nConfig.Flare_models = {\n    [GetHashKey(\"lazer\")] = {limit = 50, mode = 1},\n    [GetHashKey(\"bombushka\")] = {limit = 150, mode = 10},\n}\nflares_models: table\nvehicle Hashkey (key): table\nlimit: number (the total amount of flares)\nmode: number (the amount projectile shot per trigger)\nexample:\n[GetHashKey(\"bombushka\")] = {limit = 150, mode = 10}"}},"/fivem/basic-flares/3_Exports":{"title":"Exports","data":{"":"Exports are used to enable the useage of functions on a global scope.","refill-flares#Refill Flares":"Use this export to create a refill station in a third-party script.\nexports['snd_GMW-Flares']:RefillFlares(entity)\nentity: number\nexample:\nRegisterCommand('refillFlares', function()\n    exports['snd_GMW-Flares']:RefillFlares(entity)\nend, false)\nPlease be aware that to be able to use this export you can't change the name of the script!"}},"/fivem/basic-job_garage":{"title":"Basic Job Garage","data":{}},"/fivem/basic-job_garage/1_Introduction":{"title":"FiveM Farming Plus Script","data":{"":"The FiveM Basic Job Garage is a straightforward Lua script designed for FiveM that empowers players to efficiently manage a dedicated garage for their job. With this script, players can easily park and unpark their vehicles, ensuring convenient access and organization.","installation#Installation":"","download#Download":"Download the script from GitHub","installation-1#Installation":"Drag and Drop the resource into your server-files and go to the configuration file located at /conig.lua.","configuration#Configuration":"Please make sure to configure the script to your need to ensure the best experience. More information can be found here."}},"/fivem/basic-job_garage/3_Bridge":{"title":"Framework Bridge","data":{"":"A framework bridge is a way to support multiple frameworks by overriding specific functions. It allows the script to be designed in such a way that it is compatible with almost every existing framework. However, it is crucial to have a good understanding of what you're doing, as these functions are essential components of the scripts.","how-to-create-a-new-framework-bridge#How to create a new framework bridge?":"To add a new framework bridge you need to create new files at the following file path: /bridge/framework/. These files are not encrypted by default and can be edited anytime. Once your in the right path, you will have to create a file named after your framework in the client and server folders. These files will contain the overrides to integrate your framework in the script.","first-steps#First-Steps":"To ensure that your files will run without any problems we highly advise you to add the following boilerplate code at the start of your files:\nif Config.Framework ~= 'frameworkName' then \n    return\nend\n-- ════════════════════════════════════════════════════════════════════════════════════ --\n-- Trusted Development || Debug-print\n-- ════════════════════════════════════════════════════════════════════════════════════ --\nif Trusted.Debug then\n    local filename = function()\n        local str = debug.getinfo(2, \"S\").source:sub(2)\n        return str:match(\"^./(.).lua$\") or str\n    end\n    print(\"^6[SERVER - DEBUG] ^0: \"..filename()..\".lua started\");\nend\n-- ════════════════════════════════════════════════════════════════════════════════════ --\n-- Code\n-- ════════════════════════════════════════════════════════════════════════════════════ --\nframeworkName = {}\nframeworkName.Shared = GetSharedObjectFunctionOrEvent\nPlease make sure that frameworkName match the name of the framework that you defined in your Config file Framework Configuration\nDepending on what Framework you are using, events will be nessecary to ensure that the data is synced whith the script. You can simply add them down below and storing the data in the (e.g.) frameworkName.Shared.job Variable.\nRegisterNetEvent('esx:playerLoaded', function(xPlayer)\n    ESX.Shared.PlayerData = xPlayer\nend)\nRegisterNetEvent('esx:setJob', function(job)\n    ESX.Shared.PlayerData.job = job\nend)\nRegisterNetEvent('QBCore:Client:UpdateObject', function()\n    QBCore.Shared = exports['qb-core']:GetCoreObject()\nend)"}},"/fivem/basic-job_garage/3_Bridge/1_Client":{"title":"Client Functions","data":{"hasjob#HasJob":"frameworkName:HasJob(job)\njob: string","example#Example":"function ESX:HasJob(job)\n    return not job and true or self.Shared?.PlayerData?.job?.name == job\nend\nfunction QBCore:HasJob(job)\n    local PlayerData = self.Shared?.Functions?.GetPlayerData()\n    return not job and true or PlayerData?.job?.name == job  \nend\nThis Code has not been tested and can contain errors. Please report these if you encounter any!","hasgrade#HasGrade":"frameworkName:HasGrade(grade)\ngrade: number","example-1#Example":"function ESX:HasGrade(grade)\n    return self.Shared?.PlayerData?.job?.grade >= grade\nend\nfunction QBCore:HasGrade(grade)\n    local PlayerData = self.Shared?.Functions?.GetPlayerData()\n    return PlayerData?.job?.grade?.level >= grade \nend\nThis Code has not been tested and can contain errors. Please report these if you encounter any!"}},"/fivem/basic-job_garage/3_Bridge/2_Server":{"title":"Server Functions","data":{"":"You will need to customize this file according to the content of the client file. This allows you to include any necessary additions to ensure the proper processing of client requests."}},"/fivem/basic-pkg-bomb":{"title":"Basic Package Bomb","data":{}},"/fivem/basic-pkg-bomb/1_Introduction":{"title":"FiveM Farming Plus Script","data":{"":"\"FiveM Basic Package Bomb\" is a simple yet powerful system designed for explosive immersion. Utilizing the ox_target library, this script ensures the best performance and synchronized gameplay. Deploy packet bombs strategically and create a dynamic multiplayer experience. Elevate your FiveM server with thrilling chaos and excitement.","installation#Installation":"","download#Download":"Download the script from GitHub","installation-1#Installation":"Drag and Drop the resource into your server-files and go to the configuration file located at /conig.lua.","checking-dependencies#Checking Dependencies":"To run the script you'll need to have es_extended & ox_target installed on your server.","configuration#Configuration":"Please make sure to configure the script to your need to ensure the best experience. More information can be found here."}},"/fivem/basic-pkg-bomb/2_Config":{"title":"2 Config","data":{"configurations#Configurations":"Change some minor things to ensure that the script fit your need.","item#Item":"The name of the item that the player needs to have to plant a bomb.\nConfig.Item = 'package_bomb'\nItem: string","prop#Prop":"The prop that will be spawned, once the player has planted the bomb.\nConfig.Prop = \"prop_cs_box_clothes\""}},"/fivem/basic-trucker":{"title":"Basic Trucker","data":{}},"/fivem/basic-trucker/1_Introduction":{"title":"FiveM Farming Plus Script","data":{"":"The Basic Trucker Job is a straightforward and versatile script that complements the diversity of civilian jobs. It provides numerous configuration options that can be individually customized for each server, offering players a pleasant gaming experience.","installation#Installation":"","download#Download":"Download the script from GitHub","installation-1#Installation":"Drag and Drop the resource into your server-files and go to the configuration file located at /conig.lua.","configuration#Configuration":"Please make sure to configure the script to your need to ensure the best experience. More information can be found here."}},"/fivem/basic-trucker/2_Config":{"title":"2 Config","data":{"configuration-options#Configuration Options:":"All configurations are located in config.lua.\nDepotExample:\nConfig.DepotPoint = {\n    {Label = \"LS Logistics\", Coords = vector4(1014.18, -2523.53, 28.31, 90.01)}\n}\nConfig.DepotPoint: table\nLabel: string\nText displayed to the player when clicking the blip.\nCoords: vec4\nCoordinates of the depot, where an NPC is spawned as a reference point. The vector represents x, y, z, and h coordinates.\nNeedJobExample:\nConfig.needJob = true\nConfig.needJob: boolean\nDescribes whether a job is required for using the routes or not.\nHealthExample:\nConfig.Health = \"engine\"\nConfig.Health: string -> 'engine' | 'body'\nSpecifies whether engine or body damage is measured.\nVehicle SpawnpointExample:\nConfig.VehSpawnPoint = vector4(983.98, -2530.77, 28.32, 355.00)\nConfig.VehSpawnPoint: vec4\nCoordinates where trucks are spawned.\nTrailer SpawnpointExample:\nConfig.TrailerSpwnPoint = vector4(982.92, -2543.71, 28.3, 355.00)\nConfig.TrailerSpwnPoint: vec4\nCoordinates where trailers are spawned.\nEndpointsExample:\nConfig.Endpoint = vector4(983.98, -2530.77, 28.32, 355.00)\nConfig.EndPoint: vec4\nCoordinates where jobs are completed.\nCooldownExample:\nConfig.Cooldown = 10\nConfig.Cooldown: integer\nSets the cooldown of a route after it is completed, preventing a player from repeating the same route immediately. The unit of the cooldown is specified in seconds.\nTexture BugExample:\nConfig.TxdBug = true\nConfig.TxdBug: boolean\nDue to a bug in certain Artifacts versions, custom textures may have issues. This configuration allows adjustment. If the menu header is white, set this config to true.\nRoutesExample:\nConfig.Routen = {\n    {Label = \"Wastewater Plant ~y~(Rancho)\", price = \"~g~80$\", Coords = vector3(476.01, -2151.01, 5.93), Reward = 80},\n}\nConfig.Routen: table\nLabel: string\nName of the route displayed to the player.\nprice: string\nWage displayed to the player in the menu.\nCoords: vec3\nDestination coordinates of the route.\nReward: integer\nPayment the player receives upon successfully completing the route.\nIMPORTANTYou can create an infinite number of routes in Config.Routen. You could theoretically set up 10,000 different routes!\nTrailerExample:\nConfig.Trailers = {\n    {spwn = \"trailers\"},\n}\nConfig.Trailers: table\nspwn: string\nSpawn name of a trailer. These are randomly selected in the script.\nTrucksExample:\nConfig.Trucks = {\n    {spwn = \"phantom\"},\n}\nConfig.Trucks: table\nspwn: string\nSpawn name of a truck. These are randomly selected in the script."}},"/fivem/busdriver":{"title":"FiveM Busdriver Job","data":{}},"/fivem/busdriver/1_Introduction":{"title":"FiveM Busdriver Job","data":{"":"The FiveM Busdriver Job is an extensive expansion that allows you to create various bus stations and routes on your server. With this script, you can provide a realistic bus driving experience and give your players the opportunity to work as bus drivers.","installation#Installation":"","purchase#Purchase":"To purchase the Script, go to the Shop and purchase it.","download#Download":"After the purchase tebex will send you an email whereupon you can download the script from Keymaster","installation-1#Installation":"Drag and Drop the resource into your server-files and go to the configuration file located at /conig.lua.","configuration#Configuration":"Please make sure to configure the script to your need to ensure the best experience. More information can be found here."}},"/fivem/busdriver/2_Config":{"title":"Configurations","data":{"":"During the creation of this script we've made sure that every important aspect is configurable to ensure that you can change the script to your needs.","framework#Framework":"As the script is using a bridge to enable compatibility with every framework you need to make sure that your framework is named here.\nConfig.Framework = \"ESX\"\nFramework: string","stations#Stations":"Define the location at wich a player can go on/off duty.\nConfig.Stations = {\n    {coords = vec3(452.77, -621.58, 28.56), label = 'Bus Station Downtown LS'},\n    {coords = vec3(1718.59, 4792.07, 41.98), label = 'Bus Station Blaine County', blip = {\n        id = 85,\n        scale = 0.8,\n        color = -1\n    }},\n}\nStations: table\ncoords: vec3 (the position of the bus station)\nlabel: string (the name of the bus station)\nblip?: table (blip customization)\nid: string\nscale: number\ncolor: number","need-job#Need Job":"Does the player need a job to be able to start bus lines.\nConfig.NeedJob = true\nNeedJob: boolean","bus-stop-blip-id#Bus Stop Blip (id)":"Set the blip id for the bus stop.\nConfig.BusStopBlip = 513\nBusStopBlip: number","enable--disable-native-waypoint#Enable / disable native waypoint":"Enable / disable the usage of the native (GTA Standard) waypoint.\nConfig.UseWaypoint = true\nUseWaypoint: boolean","live-blip--radar#Live Blip / Radar":"Enable / disable the usage of a blip that acts as a live radar for players to see the location of a bus line. This blip isn't fully accurate and is only update every few seconds (or what you configured it to be).\nConfig.LiveBlip = true\nLiveBlip: boolean","bus-live-blip-id#Bus Live Blip (id)":"Set the blip id for the live radar.\nConfig.BusLiveBlip = 513\nBusLiveBlip: number","live-blip--radar-interval#Live Blip / Radar Interval":"Choose the interval for every update of the live radar.\nConfig.LiveBlipInterval = 1e4 --> 10000\nLiveBlipInterval: number","start-location#Start Location":"Set the starting location of a bus line.\nConfig.Start = {\n    ['X49'] = {coords = vec4(459.03, -633.20, 28.49, 220.00), bus_model = \"bus\", extra = 1, time = 7},\n    ['071'] = {coords = vec4(1711.28, 4806.75, 41.81, 101.42), bus_model = \"bus\", extra = 1, time = 20},\n}\nStart: table\nName of the bus line (Key): table\ncoords: vec4 (the location)\nbus_model: string (the model of the bus used by the player)\ntrailer_model?: string (if you want to use a bus with a trailer)\nextra: number (wich extra the bus should have)\nlivery?: number (wich livery the bus should have)\ntime: number (the amount of time in minutes to finish the line)\nexample:\n['X49'] = {coords = vec4(459.03, -633.20, 28.49, 220.00), bus_model = \"bus\", extra = 1, time = 7},\n['SB82'] = {coords = vec4(459.03, -633.20, 28.49, 220.00), bus_model = \"bus\", trailer_model = \"bustrailermodel\", extra = 1, livery = 3, time = 12},","salary#Salary":"Set the salary wich is binded to a bus line.\nConfig.Salary = {\n    [\"X49\"] = 1200,\n    [\"071\"] = 8000,\n    ...\n}\nSalary: table\nName of the bus line (Key): number\nPlease make sure that the key is matching the other keys! Otherwise the script will not bind the data!","routes#Routes":"Set the bus station of a bus line.\nThe last stop is the end of the line. This means that if your last stop is in the middle of nowhere the player will be stuck there with no vehicle!\nConfig.Routes = {\n    [\"X49\"] = {\n        {bus_stop = \"Strawberry Ave -> LSIA\", coords = vec4(307.61, -766.03, 29.25, 162.15)},\n        {bus_stop = \"LSIA -> Downtown LS\", coords = vec4(-1032.13, -2730.21, 20.12, 245.97)},\n        {bus_stop = \"Downtown LS\", coords = vec4(457.85, -638.85, 28.50, 35.69)},\n    },\n    [\"071\"] = {\n        {bus_stop = \"Grapeseed Main Street -> Paleto Bay\", coords = vec4(1829.96, 5066.94, 58.22, 305.90)},\n        {bus_stop = \"Paleto Bay -> Grapeseed\", coords = vec4(-312.54, 6043.30, 32.23, 313.72)},\n        {bus_stop = \"Grapeseed\", coords = vec4(1708.73, 4806.32, 42.64, 271.34)},\n    },\n    ...\n}\nRoutes: table\nName of the bus line (Key): table:\nbus_stop: string (name of the bus stop)\ncoords: vec4 (location of the bus stop)\nchangeExtra?: number (changes the bus extra at this specific stop)\nexample:\n[\"071\"] = {\n    {bus_stop = \"Strawberry Ave -> LSIA\", coords = vec4(307.61, -766.03, 29.25, 162.15), changeExtra = 2},\n}\nPlease make sure that the key is matching the other keys! Otherwise the script will not bind the data!","uniform#Uniform":"If this configuration is enabled the player will be given a uniform upon starting his duty.\nConfig.Uniform = {\n    Enabled = true,\n    Male = {\n        arms = 11,\n        pants_1 = 13, pants_2 = 0,\n        shoes_1 = 51, shoes_2 = 0,\n        tshirt_1 = 15, tshirt_2 = 0,\n        bproof_1 = 52,\n        torso_1 = 213, torso_2 = 10,\n    },\n    Female = {\n        ...\n    }\n}\nUniform: table\nEnabled: boolean (determines the player will wear a uniform or not)\nMale: table (contains clothing data)\nFemale: table (contains clothing data)\nPlease keep in mind that this function has only been tested with ESX!","npcs#NPCs":"As the script utilizes NPC interactions you can add peds to this list, so that they can be spawned in a randomized order while the player is driving an active bus line.\nWe highly advice you to use scenario peds, as these have different apperarences every time they spawn. This ensures an immersive experience for the player.\nConfig.NPC = {\n    \"s_m_m_autoshop_01\",\n    \"s_m_m_dockwork_01\",\n    \"s_m_m_hairdress_01\",\n    ...\n}\nNPC: table<string>","ui-custimization#UI Custimization":"If you want to customize the provided UI you can use the following options.\nConfig.UI = {\n    Text = {\n        time_remaining = \"Verbleibende Zeit\",\n        stops = \"Haltestelle\",\n        satisfaction = \"Zufriedenheit der Gäste\"\n    },\n    Position = {\n        marginRight = 0,\n        marginTop = 0,\n    }\n}\nText: table\ntime_remaining: string\nstops: string\nsatisfaction: string\nThe default values are mt-[1.5rem] and mr-[2rem]. Any changes to the following options will overwrite these vaules in rem. So if you want your right padding to be 10 the value will be overwritten to mr-[10rem].\nPosition: table\nmarginRight: number\nmarginTop: number","additional-infomation#Additional Infomation:":"As mentioned before the default vaules are used if your options are equal to 0. By default the UI is in the to right of your screen with some spacing.If you wanted the UI to be in the bottom right and a bit further from the right border you'd have to write the following config options:\nPosition = {\n    marginRight = 10,\n    marginTop = 34,\n}\nThis means that the greater the number you choose the further the UI will move to the bottom/left of your screen."}},"/fivem/busdriver/4_Bridge":{"title":"Framework Bridge","data":{"":"A framework bridge is a way to support multiple frameworks by overriding specific functions. It allows the script to be designed in such a way that it is compatible with almost every existing framework. However, it is crucial to have a good understanding of what you're doing, as these functions are essential components of the scripts.","how-to-create-a-new-framework-bridge#How to create a new framework bridge?":"To add a new framework bridge you need to create new files at the following file path: /bridge/framework/. These files are not encrypted by default and can be edited anytime. Once your in the right path, you will have to create a file named after your framework in the client and server folders. These files will contain the overrides to integrate your framework in the script.","first-steps#First-Steps":"To ensure that your files will run without any problems we highly advise you to add the following boilerplate code at the start of your files:\nif Config.Framework ~= 'frameworkName' then \n    return\nend\n-- ════════════════════════════════════════════════════════════════════════════════════ --\n-- Trusted Development || Debug-print\n-- ════════════════════════════════════════════════════════════════════════════════════ --\nif Trusted.Debug then\n    local filename = function()\n        local str = debug.getinfo(2, \"S\").source:sub(2)\n        return str:match(\"^./(.).lua$\") or str\n    end\n    print(\"^6[SERVER - DEBUG] ^0: \"..filename()..\".lua started\");\nend\n-- ════════════════════════════════════════════════════════════════════════════════════ --\n-- Code\n-- ════════════════════════════════════════════════════════════════════════════════════ --\nframeworkName = {}\nframeworkName.Shared = GetSharedObjectFunctionOrEvent\nPlease make sure that frameworkName match the name of the framework that you defined in your Config file Framework Configuration\nDepending on what Framework you are using, events will be nessecary to ensure that the data is synced whith the script. You can simply add them down below and storing the data in the (e.g.) frameworkName.Shared.job Variable.\nRegisterNetEvent('esx:playerLoaded', function(xPlayer)\n    ESX.Shared.PlayerData = xPlayer\nend)\nRegisterNetEvent('esx:setJob', function(job)\n    ESX.Shared.PlayerData.job = job\nend)\nRegisterNetEvent('QBCore:Client:UpdateObject', function()\n    QBCore.Shared = exports['qb-core']:GetCoreObject()\nend)"}},"/fivem/busdriver/3_Extentions":{"title":"Extention Events","data":{"":"Extention Events are provided to support 3rd party resources (e.g. Fuel System).","client-extention-events#Client Extention Events":"","job-started#Job Started":"AddEventHandler('Trusted:Bus:JobStarted', function(vehicle)\n    print(vehicle)\nend)\nvehicle: number"}},"/fivem/busdriver/4_Bridge/2_Server":{"title":"Server Functions","data":{"":"You will need to customize this file according to the content of the client file. This allows you to include any necessary additions to ensure the proper processing of client requests."}},"/fivem/busdriver/4_Bridge/1_Client":{"title":"Client Functions","data":{"hasjob#HasJob":"frameworkName:HasJob(job)\njob: string","example#Example:":"function ESX:HasJob(job)\n    return not job and true or self.Shared?.PlayerData?.job?.name == job\nend\nfunction QBCore:HasJob(job)\n    local PlayerData = self.Shared?.Functions?.GetPlayerData()\n    return not job and true or PlayerData?.job?.name == job  \nend\nThis Code has not been tested and can contain errors. Please report these if you encounter any!","hasgrade#HasGrade":"frameworkName:HasGrade(grade)\ngrade: number","example-1#Example:":"function ESX:HasGrade(grade)\n    return self.Shared?.PlayerData?.job?.grade >= grade\nend\nfunction QBCore:HasGrade(grade)\n    local PlayerData = self.Shared?.Functions?.GetPlayerData()\n    return PlayerData?.job?.grade?.level >= grade \nend\nThis Code has not been tested and can contain errors. Please report these if you encounter any!","paycheck#PayCheck":"frameworkName:PayCheck(salary, percentage)\nsalary: number\npercentage: number","example-2#Example:":"function ESX:PayCheck(salary, percentage)\n    TriggerServerEvent('ESX:Busdriver:PayCheck', salary, percentage)\nend\nfunction QBCore:PayCheck(salary, percentage)\n    TriggerServerEvent('QBCore:Busdriver:PayCheck', salary, percentage)\nend","setplayeruniform#SetPlayerUniform":"frameworkName:SetPlayerUniform(on)\non: boolean","example-3#Example:":"function ESX:SetPlayerUniform(on)\n    if on then \n        TriggerEvent('skinchanger:getSkin', function(skin)\n            TriggerEvent('skinchanger:loadClothes', skin, Config.Uniform[skin.sex == 0 and \"Male\" or \"Female\"])\n        end)\n        return\n    end \n    \n    ESX.Shared.TriggerServerCallback('esx_skin:getPlayerSkin', function(skin)\n        TriggerEvent('skinchanger:loadSkin', skin)\n    end)\nend\nfunction QBCore:SetPlayerUniform(on)\n    if on then \n        --> TODO\n    end\nend"}},"/fivem/diving":{"title":"Advanced Diving & Loot","data":{}},"/fivem/diving/1_Introduction":{"title":"Advanced Diving & Loot","data":{"":"Dive into an underwater adventure with a sleek diving suit and discover loot chests. Follow hints to find hidden treasures at 145+ unique locations. Customize oxygen levels, new loot chests and items to make sure your needs are met. Enjoy a challenging mini-game by Overextended and get ready for an epic underwater journey!","installation#Installation":"","purchase#Purchase":"To purchase the Script, go to the Shop and purchase it.","download#Download":"After the purchase tebex will send you an email whereupon you can download the script from Keymaster","installation-1#Installation":"Drag and Drop the resource into your server-files and go to the configuration file located at /conig.lua.","configuration#Configuration":"Please make sure to configure the script to your need to ensure the best experience. More information can be found here."}},"/fivem/diving/2_Config":{"title":"Config","data":{"framework#Framework":"Set the framework to use.\nConfig.Framework = \"ESX\"\nFramework: string","maxscubatime#MaxScubaTime":"Set the maximum time a player can stay underwater.\nConfig.MaxScubaTime = 2000.0\nMaxScubaTime: number","lootboxes#LootBoxes":"Set the loot boxes to use.\nConfig.LootBoxes = {\n    ['prop_box_tea01a'] = {\n        Coords = {\n            vec3(-1614.98, -1832.01, -36.84),\n            vec3(-1694.97, -1651.84, -26.74),\n            vec3(-1723.48, -1544.82, -25.09),\n            vec3(-1671.59, -1347.89, -13.90),\n            vec3(-1681.30, -1287.33, -11.43),\n            vec3(-1817.60, -2123.07, -54.47),\n            vec3(-1718.80, -2265.34, -24.47),\n            vec3(-1767.18, -2021.27, -56.62),\n            vec3(-1948.61, -1031.70, -12.46),\n            ...\n        },\n        Items = {\n            {\n                item = 'money', \n                amount = {\n                    min = 100, \n                    max = 500\n                }\n            },\n            {\n                item = 'sandwich', \n                amount = {\n                    min = 1, \n                    max = 4\n                }\n            },\n            {\n                item = 'water', \n                amount = {\n                    min = 1, \n                    max = 4\n                }\n            },\n            ...\n        }\n    }\n}\nLootBoxes: table\nCoords: table\n[prop: string]: table<vec3>\nItems: table\nitem: string\namount: table\nmin: number\nmax: number"}},"/fivem/diving/3_Bridge":{"title":"Framework Bridge","data":{"":"A framework bridge is a way to support multiple frameworks by overriding specific functions. It allows the script to be designed in such a way that it is compatible with almost every existing framework. However, it is crucial to have a good understanding of what you're doing, as these functions are essential components of the scripts.","how-to-create-a-new-framework-bridge#How to create a new framework bridge?":"To add a new framework bridge you need to create new files at the following file path: /bridge/framework/. These files are not encrypted by default and can be edited anytime. Once your in the right path, you will have to create a file named after your framework in the client and server folders. These files will contain the overrides to integrate your framework in the script.","first-steps#First-Steps":"To ensure that your files will run without any problems we highly advise you to add the following boilerplate code at the start of your files:\nif Config.Framework ~= 'frameworkName' then \n    return\nend\n-- ════════════════════════════════════════════════════════════════════════════════════ --\n-- Trusted Development || Debug-print\n-- ════════════════════════════════════════════════════════════════════════════════════ --\nif Trusted.Debug then\n    local filename = function()\n        local str = debug.getinfo(2, \"S\").source:sub(2)\n        return str:match(\"^./(.).lua$\") or str\n    end\n    print(\"^6[SERVER - DEBUG] ^0: \"..filename()..\".lua started\");\nend\n-- ════════════════════════════════════════════════════════════════════════════════════ --\n-- Code\n-- ════════════════════════════════════════════════════════════════════════════════════ --\nframeworkName = {}\nframeworkName.Shared = GetSharedObjectFunctionOrEvent\nExample:\nESX = {}\nESX.Shared = exports['es_extended']:getSharedObject()\nQBCore = {}\nQBCore.Shared = exports['qb-core']:GetCoreObject()\nOX = {}"}},"/fivem/diving/3_Bridge/1_Server":{"title":"Server Functions","data":{"":"Please be aware that frameworkName is a placeholder for the actual framework name. Replace it with the actual framework name. (for example: ESX:CanCarryItem())","cancarryitem#CanCarryItem":"Returns true if the player can carry the item, false otherwise.\nframeworkName:CanCarryItem(source, item, count)\nsource: number\nitem: string\ncount: number","customdrop#CustomDrop":"Creates a custom drop for the player.\nframeworkName:CustomDrop(source, item, count)\nsource: number\nitem: string\ncount: number","additem#AddItem":"Adds an item to the player's inventory.\nframeworkName:AddItem(source, item, count)\nsource: number\nitem: string\ncount: number","registerusableitem#RegisterUsableItem":"Registers a usable item.\nframeworkName:RegisterUsableItem(item, action)\nitem: string\naction: function","removeitem#RemoveItem":"Removes an item from the player's inventory.\nframeworkName:RemoveItem(source, item, count)\nsource: number\nitem: string"}},"/fivem/farming":{"title":"FiveM Farming Plus Script","data":{}},"/fivem/farming/1_Introduction":{"title":"FiveM Farming Plus Script","data":{"":"The Farming Script is a versatile tool that offers a wide range of configuration options, making it suitable for any server. It enables developers to customize the script according to their specific needs, allowing for various farming activities such as resource gathering, crafting and selling. Whether you're looking to automate tasks or optimize your farming processes, the Farming Script is an essential tool. Experience a new level of convenience and efficiency as you revolutionize your farming activities. Get ready for an enhanced farming experience with the Farming Plus Script!","installation#Installation":"","purchase#Purchase":"To purchase the Script, go to the Shop and purchase it.","download#Download":"After the purchase tebex will send you an email whereupon you can download the script from Keymaster","installation-1#Installation":"Drag and Drop the resource into your server-files and go to the configuration file located at /conig.lua.","configuration#Configuration":"Please make sure to configure the script to your need to ensure the best experience. More information can be found here."}},"/fivem/gopostal":{"title":"FiveM GoPostal Job","data":{}},"/fivem/gopostal/1_Introduction":{"title":"FiveM GoPostal Job","data":{"":"Experience the ultimate delivery revolution with the GoPostal Job. This script addresses common challenges in FiveM roleplay servers, providing innovative solutions for enhanced gameplay. Customize the job to your requirements, track package status intuitively, and enjoy exceptional performance. Immerse yourself in lifelike animations that bring the delivery role to life. Upgrade your server today and redefine the delivery experience with GoPostal. Get ready for realistic and immersive deliveries like never before.","installation#Installation":"","purchase#Purchase":"To purchase the Script, go to the Shop and purchase it.","download#Download":"After the purchase tebex will send you an email whereupon you can download the script from Keymaster","installation-1#Installation":"Drag and Drop the resource into your server-files and go to the configuration file located at /conig.lua.","configuration#Configuration":"Please make sure to configure the script to your need to ensure the best experience. More information can be found here."}},"/fivem/gopostal/2_Config":{"title":"Configurations","data":{"":"To ensure that every of your needs are met, make sure to change the options down below to your liking.","job#Job":"Determines if the player needs a job to work with GoPostal.\nConfig.NeedJob = true\nNeedJob: boolean","job-name#Job Name":"Set the job stored in your Database you want to use. The default value is 'gopostal', wich is the job provided with the script.\nConfig.JobName = \"gopostal\"\nJobName: string","blip#Blip":"Sets a Blip at specified position to inform the player about the locations of GoPostal depots.\nConfig.Blip = {\n    id = 793,\n    scale = 0.8,\n    colour = -1,\n}\nBlip: table\nid: number\nscale: float\ncolour: number","random-routes#Random Routes":"Enabled rantomization of the list of stops in a given route.\nConfig.RandomizeRoutes = true\nRandomizeRoutes: boolean","start#Start":"Defines the position where players can start new routes.\nConfig.Start = {\n    {route = \"Mirror Park\", coords = vec4(63.41, 124.20, 79.17, 150.00), transporter_model = \"boxville2\", desc = \"Mirror Park\"},\n    ...\n}\nStart: table\nroute: string\ncoords: vec4\ntransporter_model: string\ndesc: string","depot#Depot":"Determines the position at wich the routes ends.\nThis Config is binded to a route in Config.Start! Please make sure that the key is matching one of the values in Config.Start\nConfig.Depot = {\n    [\"Mirror Park\"] = vec3(50.95, 118.90, 79.33), \n    ...\n}\nDepot: table\nkey (route): vec3","salary#Salary":"Sets the amount of money given to the player at the end of a route.\nThis Config is binded to a route in Config.Start! Please make sure that the key is matching one of the values in Config.Start\nConfig.Salary = {\n    [\"Mirror Park\"] = 850,\n    ...\n}\nSalary: table\nkey (route): number","routes#Routes":"A lists of stops the player has to drive.\nThis Config is binded to a route in Config.Start! Please make sure that the key is matching one of the values in Config.Start\nConfig.Routes = {\n    [\"Mirror Park\"] = {\n        {coords = vec3(1072.09, -390.26, 67.13), door = vec3(1063.19, -381.14, 67.85)},\n        {coords = vec3(1020.88, -433.76, 64.71), door = vec3(1012.71, -424.32, 64.95)},\n        {coords = vec3(930.71, -494.20, 59.39), door = vec3(922.15, -479.17, 61.08)},\n        {coords = vec3(875.60, -573.83, 57.02), door = vec3(861.76, -582.80, 58.16)},\n        {coords = vec3(978.83, -562.45, 58.92), door = vec3(975.79, -579.22, 59.64)},\n        {coords = vec3(1183.11, -556.69, 64.19), door = vec3(1203.80, -557.95, 69.40)},\n        {coords = vec3(1328.81, -565.69, 72.87), door = vec3(1324.06, -581.94, 73.25)},\n    },\n    ...\n}\nRoutes: table\nkey (ruote): table\ncoords: vec3\ndoor: vec3\nexample:\n{\n    coords = vec3(00.00, 00.00, 00.00),\n    door = vec3(00.00, 00.00, 00.00),\n}","uniform#Uniform":"If enabled the player will wear a uniform during the duty time.\nConfig.Uniform = {\n    enabled = true,\n    male = {\n        arms = 11,\n        pants_1 = 13,\n        pants_2 = 0,\n        shoes_1 = 51,\n        shoes_2 = 0,\n        tshirt_1 = 15,\n        tshirt_2 = 0,\n        bproof_1 = 0,\n        torso_1 = 213,\n        torso_2 = 8,\n    },\n    female = {\n    }\n}\nUniform: table\nenabled: boolean\nmale: table (ESX properties)\nfemale: table (ESX properties)","text#Text":"Basic Translation.\nConfig.Text = {\n    ['press_button'] = \"Drücke ~INPUT_CONTEXT~ um\",\n    ['go_off_duty'] = \"den Dienst zu quitieren.\",\n    ['go_on_duty'] = \"in den Dienst zu gehen.\",\n    ['start_route'] = \"Drücke ~INPUT_CONTEXT~ um die Route ~y~%s~s~ zu starten.\",\n    ['route_started'] = \"Route begonnen\", \n    ['route_started_description'] = \"~y~Fahre zu den Zielorten und Liefere die Pakete ab!\",\n    ['route_failed'] = \"Du bist nicht mit deinem Dienstfahrzeug zurückgefahren. Du bekommst also ~r~keinen Lohn~s~.\",\n    ['route_complete'] = \"~g~Fahrt beendet!\",\n    ['route_complete_description'] = \"Du hast die Fahrt erfolgreich abgeschlossen!\",\n    ['target'] = \"Zielort\",\n    ['delvier_package'] = \"Steige aus dem Wagen aus, und bringe das Paket zum ~y~Zielort.\",\n    ['press_button_to_deliver'] = \"Drücke ~INPUT_CONTEXT~ um das Packet abzuliefern.\",\n    ['end_route'] = \"Drücke ~INPUT_CONTEXT~ um die Route zu beenden!\",\n    ['stop_count'] = \"Abgelieferte Pakete: ~b~%s/%s\",\n    ['package_health'] = \"Zustand der Pakete:\",\n    ['route_failed_banner'] = \"Fahrt fehlgeschlagen\",\n    ['route_failed_banner_desc'] = \"~r~Du hast dein Dienstfahrzeug zerstört!\",\n    ['go_back_in_transporter'] = \"Steige wieder in den ~y~Transporter~s~ ein!\"\n}"}},"/fivem/gopostal/extentions/Client":{"title":"Extentions","data":{"":"Our script provides a way to extend the functionality of the script. This can be done by editing the ext.lua file in the client or server folder with the following code snippet:","truck-spawned#Truck Spawned":"AddEventHandler('Trusted:GoPostal:Extention:TruckSpawned', function(entity)\n    --- implement code here\nend)\nentity: number (the entity of the truck)"}},"/fivem/gopostal/extentions/Server":{"title":"Extentions","data":{"":"Our script provides a way to extend the functionality of the script. This can be done by editing the ext.lua file in the client or server folder with the following code snippet:","job-finished#Job Finished":"AddEventHandler(\"Trusted:GoPostal:Extention:JobFinished\", function(xPlayer, reward)\n    ---@add extention code here.\nend)\nxPlayer: table (the player object)\nreward: number (the reward amount)"}},"/fivem/job_garage/3_Bridge":{"title":"Framework Bridge","data":{"":"A framework bridge is a way to support multiple frameworks by overriding specific functions. It allows the script to be designed in such a way that it is compatible with almost every existing framework. However, it is crucial to have a good understanding of what you're doing, as these functions are essential components of the scripts.","how-to-create-a-new-framework-bridge#How to create a new framework bridge?":"To add a new framework bridge you need to create new files at the following file path: /bridge/framework/. These files are not encrypted by default and can be edited anytime. Once your in the right path, you will have to create a file named after your framework in the client and server folders. These files will contain the overrides to integrate your framework in the script.","first-steps#First-Steps":"To ensure that your files will run without any problems we highly advise you to add the following boilerplate code at the start of your files:\nif Config.Framework ~= 'frameworkName' then \n    return\nend\n-- ════════════════════════════════════════════════════════════════════════════════════ --\n-- Trusted Development || Debug-print\n-- ════════════════════════════════════════════════════════════════════════════════════ --\nif Trusted.Debug then\n    local filename = function()\n        local str = debug.getinfo(2, \"S\").source:sub(2)\n        return str:match(\"^./(.).lua$\") or str\n    end\n    print(\"^6[SERVER - DEBUG] ^0: \"..filename()..\".lua started\");\nend\n-- ════════════════════════════════════════════════════════════════════════════════════ --\n-- Code\n-- ════════════════════════════════════════════════════════════════════════════════════ --\nframeworkName = {}\nframeworkName.Shared = GetSharedObjectFunctionOrEvent\nPlease make sure that frameworkName match the name of the framework that you defined in your Config file Framework Configuration\nDepending on what Framework you are using, events will be nessecary to ensure that the data is synced whith the script. You can simply add them down below and storing the data in the (e.g.) frameworkName.Shared.job Variable.\nRegisterNetEvent('esx:playerLoaded', function(xPlayer)\n    ESX.Shared.PlayerData = xPlayer\nend)\nRegisterNetEvent('esx:setJob', function(job)\n    ESX.Shared.PlayerData.job = job\n    JobGarage:init()\nend)\nRegisterNetEvent('QBCore:Client:UpdateObject', function()\n    QBCore.Shared = exports['qb-core']:GetCoreObject()\n    JobGarage:init()\nend)"}},"/fivem/job_garage/3_Bridge/1_Client":{"title":"Client Functions","data":{"hasjob#HasJob":"frameworkName:HasJob(job)\njob: string","example#Example":"function ESX:HasJob(job)\n    return not job and true or self.Shared?.PlayerData?.job?.name == job\nend\nfunction QBCore:HasJob(job)\n    local PlayerData = self.Shared?.Functions?.GetPlayerData()\n    return not job and true or PlayerData?.job?.name == job  \nend\nThis Code has not been tested and can contain errors. Please report these if you encounter any!","hasgrade#HasGrade":"frameworkName:HasGrade(grade)\ngrade: number","example-1#Example":"function ESX:HasGrade(grade)\n    return self.Shared?.PlayerData?.job?.grade >= grade\nend\nfunction QBCore:HasGrade(grade)\n    local PlayerData = self.Shared?.Functions?.GetPlayerData()\n    return PlayerData?.job?.grade?.level >= grade \nend\nThis Code has not been tested and can contain errors. Please report these if you encounter any!"}},"/fivem/job_garage/3_Bridge/2_Server":{"title":"Server Functions","data":{"":"You will need to customize this file according to the content of the client file. This allows you to include any necessary additions to ensure the proper processing of client requests."}},"/fivem/marketplace":{"title":"FiveM Marketplace","data":{}},"/fivem/marketplace/2_Config":{"title":"Config","data":{"":"The following options are provided to ensure the best individual experience.","framework#Framework":"Determines the framework your server is using. If your server is running a framework that isn't supported by default please go to the Bridge documentation and follow the instructions on how to add a new framework.\nConfig.Framework = \"ESX\"\nFramework: string","pricechangeinterval#PriceChangeInterval":"As the script simulates a price change (like prices changes in real life) you can set the random interval in wich prices will change. The numbers you set are minutes (1 = 1 min).\nEvery price change will be stored in a seperate file, wich is located at 'server/data/history.json'. This file is used by the script to display a graph wich visualize the price changes:\nConfig.PriceChangeInterval = {min = 1, max = 2}\nPriceChangeInterval: table\nmin: number\nmax: number","marketplace#Marketplace":"This is config options allows you to create new marketplace locations.\nSome config options are optional and can be disabled by simply letting them out. Such options will be marked with '?'.\nYou can add an infinte amount of marketplaces.\nConfig.Marketplace = {\n    {\n        coords = vec4(-237.00, -256.41, 39.12, 0.71),\n        items = {\n            {\n                maker = \"Pißwasser\", \n                type = \"consumable\", \n                product = \"Pils Beer\", \n                item = \"bread\", \n                image = \"pisswasser.jpg\", \n                price = {\n                    min = 1, \n                    max = 2\n                }\n            }\n        },\n        blip = {\n            id = 590,\n            scale = 0.8,\n            label = \"Marketplace\"\n        },\n        ped = \"s_m_y_waretech_01\"\n    },\n}\nMarketplace: table\ncoords: vec4\nitems: table (Represents one row in the UI table)\nmaker: string\ntype: string\nproduct: string\nitem: string\nimage: string (Images can be added in 'svelte/dist/imgs/')\nprice: table\nmin: number\nmax: number\nblip?: table\nid: number\nscale: number\nlabel: string\nped: string"}},"/fivem/marketplace/1_Introduction":{"title":"FiveM Marketplace","data":{"":"Every RP server needs a place where players can sell collected items. For this purpose, the Trusted-Studios team has developed a marketplace script that allows players to sell their items as easily and efficiently as possible.","installation#Installation":"","purchase#Purchase":"To purchase the Script, go to the Shop and purchase it.","download#Download":"After the purchase tebex will send you an email whereupon you can download the script from Keymaster","installation-1#Installation":"Drag and Drop the resource into your server-files and go to the configuration file located at /conig.lua.","configuration#Configuration":"Please make sure to configure the script to your need to ensure the best experience. More information can be found here."}},"/fivem/marketplace/3_Bridge":{"title":"Framework Bridge","data":{"":"A framework bridge is a way to support multiple frameworks by overriding specific functions. It allows the script to be designed in such a way that it is compatible with almost every existing framework. However, it is crucial to have a good understanding of what you're doing, as these functions are essential components of the scripts.","how-to-create-a-new-framework-bridge#How to create a new framework bridge?":"To add a new framework bridge you need to create new files at the following file path: /bridge/framework/. These files are not encrypted by default and can be edited anytime. Once your in the right path, you will have to create a file named after your framework in the client and server folders. These files will contain the overrides to integrate your framework in the script.","first-steps#First-Steps":"To ensure that your files will run without any problems we highly advise you to add the following boilerplate code at the start of your files:\nif Config.Framework ~= 'frameworkName' then \n    return\nend\n-- ════════════════════════════════════════════════════════════════════════════════════ --\n-- Trusted Development || Debug-print\n-- ════════════════════════════════════════════════════════════════════════════════════ --\nif Trusted.Debug then\n    local filename = function()\n        local str = debug.getinfo(2, \"S\").source:sub(2)\n        return str:match(\"^./(.).lua$\") or str\n    end\n    print(\"^6[SERVER - DEBUG] ^0: \"..filename()..\".lua started\");\nend\n-- ════════════════════════════════════════════════════════════════════════════════════ --\n-- Code\n-- ════════════════════════════════════════════════════════════════════════════════════ --\nframeworkName = {}\nframeworkName.Shared = GetSharedObjectFunctionOrEvent\nPlease make sure that frameworkName match the name of the framework that you defined in your Config file Framework Configuration\nDepending on what Framework you are using, events will be nessecary to ensure that the data is synced whith the script. You can simply add them down below and storing the data in the (e.g.) frameworkName.Shared.job Variable.\nRegisterNetEvent('esx:playerLoaded', function(xPlayer)\n    ESX.Shared.PlayerData = xPlayer\nend)\nRegisterNetEvent('esx:setJob', function(job)\n    ESX.Shared.PlayerData.job = job\nend)\nRegisterNetEvent('QBCore:Client:UpdateObject', function()\n    QBCore.Shared = exports['qb-core']:GetCoreObject()\nend)"}},"/fivem/marketplace/3_Bridge/1_Server":{"title":"1 Server","data":{"removeitem#RemoveItem":"Removes an item from the player inventory.\nframeworkName:CanCarryItem(source, item, count)\nsource: number\nitem: string\ncount: number\nexample:\nfunction ESX:RemoveItem(source, item, amount)\n    local xPlayer = ESX.Shared.GetPlayerFromId(source)\n    xPlayer.removeInventoryItem(item, amount)\nend","fetchitemcount#FetchItemCount":"Returns the count of a specific item.\nframeworkName:FetchItemCount(source, item)\nsource: number\nitem: string\nexample:\nfunction ESX:FetchItemCount(source, item)\n    local xPlayer = ESX.Shared.GetPlayerFromId(source)\n    return xPlayer.getInventoryItem(item).count\nend","givemoney#GiveMoney":"Gives money to the player.\nframeworkName:GiveMoney(source, amount)\nsource: number\namount: number\nexample:\nfunction ESX:GiveMoney(source, amount)\n    local xPlayer = ESX.Shared.GetPlayerFromId(source)\n    xPlayer.addMoney(amount)\nend"}},"/fivem/marketplace/4_Images":{"title":"Adding New Images","data":{"":"Adding images is a pretty simple task but can seem complicated if you're not into web development. To add new images, navigate to the svelte/build/imgs path and paste your images.The supported image extensions are:\npng\njpg\njpeg\nDas Hinzufügen von Bildern ist eine ziemlich einfache Aufgabe, kann aber kompliziert erscheinen, wenn Sie sich nicht mit der Webentwicklung auskennen. Um neue Bilder hinzuzufügen, navigieren Sie zum Pfad svelte/build/imgs und fügen Sie Ihre Bilder ein.Die unterstützten Bildformate sind:\npng\njpg\njpeg"}},"/fivem/nitro":{"title":"FiveM Nitro/Nos Script","data":{}},"/fivem/nitro/1_Introduction":{"title":"FiveM Nitro/Nos Script","data":{"":"The Nitro/Nos script enables the installation of external nitro bottles in vehicles. Activating the nitro with a designated button provides an immediate performance boost. A clear display indicates the available nitro level, allowing drivers to plan its usage effectively.For safety, the script incorporates an intelligent security system. Nitro settings are saved using statebags, preventing any loss of nitro capacity during script restarts. This ensures a seamless experience for players, allowing them to pick up where they left off.","installation#Installation":"","purchase#Purchase":"To purchase the Script, go to the Shop and purchase it.","download#Download":"After the purchase tebex will send you an email whereupon you can download the script from Keymaster","installation-1#Installation":"Drag and Drop the resource into your server-files and go to the configuration file located at /conig.lua.","configuration#Configuration":"Please make sure to configure the script to your need to ensure the best experience. More information can be found here."}},"/fivem/nitro/2_Config":{"title":"Configurations","data":{"":"These configurations have been written to allow each server to make individual adjustments for an enhanced experience.","framework#Framework":"Defines the used Framework to allow the Script to be used on more servers. Frameworks which are supported by default are ox_core, ESX Legacy and Standalone. If you want to add your own Framework you can use bridge functions to do so. More information about the Bridge can be found here.\nConfig.Framework = \"ESX\"\nConfig.Framework = \"OX\"\nConfig.Framework = \"Standalone\"\nConfig.Framework = \"Other\"\nframeworkName: string","item#Item":"Determines the item name you want to use, the time of usage during installation and the amount needed to install nitro.\nConfig.Item = {\n    name = 'nitro',\n    count = 1,\n    useTime = 5000\n}\nname: string\ncount: number\nuseTime: number","display-settings#Display Settings":"Configure the locale options and some small color settings.\nConfig.Display = {\n    color = {r = 255, g = 255, b = 255},\n    Text = {\n        ['add_nitro'] = 'Drücke ~INPUT_VEH_DUCK~ um Nitro einzubauen.',\n        ['nitro_added'] = 'Nitro wurde ~g~erfolgreich~s~ eingbaut!',\n        ['nitro_empty'] = 'Deine Nitro Flasche ist aufgebraucht.',\n        ['nitro_bar_label'] = 'Nitro',\n    }\n}\nColor: table\nThe RGB code you want to use.\nr: number\ng: number\nb: number\nText: table\nThe locale you want to use.\ntranslation: number\nDo NOT change the key (for example ['add_nitro']) or your translations will not work!","nitro-drainrate#Nitro Drainrate":"Defines the nitro drain rate. Lower values euquals longer usage time.\nConfig.NitroDrainRate = 10\nrate: number (default: 10)","torque-multiplier#Torque Multiplier":"Config.TorqueMultiplier = 2.0\nmultiplier: number (default: 2.0)","nitro-activation-key#Nitro Activation Key":"Note that changes to this configurations will not influence the controler input. This one is pre-defined in the script to prevent missunderstandings.\nIf you want to change this configuration please pick an input index from the official cfx (FiveM) documentation: FiveM docs.\nConfig.NitroKey = 19\ninput: number","custom-visuals#Custom Visuals":"This configurations will override some visual components to match your server's UI.\nDo NOT use this config if you don't know what you're doing! We will not support you if you're messing with these configurations!\nConfig.CustomVisual = {\n    HideProgressBar = false,\n    ProgressBarOffset = 25, -- default: 1\n    ShowHelp = function(text, bleep)\n        ---@add: custom show help functionality\n    end,\n    Notify = nil\n}\nHideProgressBar: boolean if enabled the Progressbar will be hidden entirely.\nProgressBarOffset: number Changes the y-position of the Progressbar.\nShowHelp?: function or nil\nOverwrites the scripts ShowHelp function. Please keep in mind that this function is called every frame!\ntext: string (the text wich will be displayed)\nbleep: boolean (if a sound should be played)\nNotify?: function or nil\nOverwrites the scrtips Notify function.\ntext: string (the text wich will be displayed)\nYou can delete the ShowHelp or Notify config option if you don't need them. The Script will proceed to use the default Notify / ShowHelp functions."}},"/fivem/nitro/3_Exports":{"title":"Exports","data":{"":"Exports are functions that can be used in other scripts. They are called to pass data or perform certain actions related to its belonging script.\nIn order to use exports without any issues you should not change the name of the script it belongs to!","getnitrolevel#GetNitroLevel":"local nitroLevel = exports['ts_nitro']:GetNitroLevel(vehicle)\nvehicle: number The vehicle you want to get the nitro level from.\nexample:\nlocal vehicle = GetVehiclePedIsIn(PlayerPedId(), false)\nlocal nitroLevel = exports['ts_nitro']:GetNitroLevel(vehicle)\nprint(nitroLevel)"}},"/fivem/nitro/4_Bridge":{"title":"Framework Bridge","data":{"":"A framework bridge is a way to support multiple frameworks by overriding specific functions. It allows the script to be designed in such a way that it is compatible with almost every existing framework. However, it is crucial to have a good understanding of what you're doing, as these functions are essential components of the scripts.","how-to-create-a-new-framework-bridge#How to create a new framework bridge?":"To add a new framework bridge you need to create new files at the following file path: /bridge/framework/. These files are not encrypted by default and can be edited anytime. Once your in the right path, you will have to create a file named after your framework in the client and server folders. These files will contain the overrides to integrate your framework in the script.","first-steps#First-Steps":"To ensure that your files will run without any problems we highly advise you to add the following boilerplate code at the start of your files:\nif Config.Framework ~= 'frameworkName' then \n    return\nend\n-- ════════════════════════════════════════════════════════════════════════════════════ --\n-- Trusted Development || Debug-print\n-- ════════════════════════════════════════════════════════════════════════════════════ --\nif Trusted.Debug then\n    local filename = function()\n        local str = debug.getinfo(2, \"S\").source:sub(2)\n        return str:match(\"^./(.).lua$\") or str\n    end\n    print(\"^6[SERVER - DEBUG] ^0: \"..filename()..\".lua started\");\nend\n-- ════════════════════════════════════════════════════════════════════════════════════ --\n-- Code\n-- ════════════════════════════════════════════════════════════════════════════════════ --\nframeworkName = {}\nframeworkName.Shared = GetSharedObjectFunctionOrEvent\nPlease make sure that frameworkName match the name of the framework that you defined in your Config file Framework Configuration"}},"/fivem/nitro/4_Bridge/1_Client":{"title":"Client Functions","data":{"haveitem#HaveItem":"frameworkName:HaveItem(item, count)\nitem: string (item name)\ncount: number (needed amount)\nreturns: boolean","example#Example":"function ESX:HaveItem(item, count)\n    local HaveItem = Async.Await(function(promise)\n        ESX.Shared.TriggerServerCallback('Trusted:Nitro:HaveItem', function(haveItem) \n            promise:resolve(haveItem)\n        end, item, count)\n    end)\n    return HaveItem\nend","useitem#UseItem":"frameworkName:UseItem(item, count)  \nitem: string (item name)\ncount: number (amount)","example-1#Example":"function ESX:UseItem(item, count)\n    TriggerServerEvent('Trusted:Nitro:ESX:UseItem', item, count)\nend"}},"/fivem/nitro/4_Bridge/2_Server":{"title":"Server Functions","data":{"":"You will need to customize this file according to the content of the client file. This allows you to include any necessary additions to ensure the proper processing of client requests.","matching-example-to-the-client-examples#Matching example to the client examples":"ESX.Shared.RegisterServerCallback('Trusted:Nitro:HaveItem', function(source, haveItem, item, count)\n    local xPlayer = ESX.Shared.GetPlayerFromId(source)\n    \n    if not xPlayer then \n        haveItem(false)\n        return\n    end \n    local xItem = xPlayer.getInventoryItem(item)\n    haveItem(xItem.count >= count)\nend)\nRegisterNetEvent('Trusted:Nitro:ESX:UseItem', function(item, count)\n    local xPlayer = ESX.Shared.GetPlayerFromId(source)\n    xPlayer.removeInventoryItem(item, count)\nend)"}},"/fivem/products":{"title":"Work In Progress","data":{}},"/fivem/simple-car-wash":{"title":"FiveM Simple Car Wash","data":{}},"/fivem/refund":{"title":"Rückerstattung für Ihr Produkt","data":{"":"Wenn Sie Ihr Produkt zurückgeben möchten, befolgen Sie bitte die unten stehenden Anweisungen.","undefined#Variante 1: Kontaktieren Sie uns":"Ihre erste Aktion sollte darin bestehen, uns entweder über Discord oder per E-Mail zu kontaktieren.\nÖffne ein Ticket auf unseren Discord Server\nSende dieses Ausgefüllte Template rein:\nBestellnummer: [Bestellung]\nGrund für die Rückerstattungsanfrage:\n#Kontakt mit Tebex\nEmail an support@trusted-studios.eu\nStellen Sie sicher, dass Sie Ihr Problem professionell schildern und Gründe für die Rückgabe des Produkts angeben. In den meisten Fällen können Probleme zum beiderseitigen Nutzen gelöst werden.","undefined#Variante 2: Kontakt mit dem Tebex-Support":"!!! Wenn der Verkäufer nicht reagiert oder trotz legitimer Gründe eine Rückerstattung verweigert, ist Ihr nächster Schritt, den Tebex-Support zu kontaktieren. !!!\nSchreiben Sie eine E-Mail an support@tebex.io.\nFügen Sie alle relevanten Details zu Ihrer Transaktion hinzu – den Namen des Verkäufers, das Produkt, Ihre Bestellnummer und den Grund für Ihre Rückerstattungsanfrage.\nHängen Sie alle unterstützenden Dokumente an, die Ihren Anspruch stärken könnten, einschließlich der Kommunikation zwischen Ihnen und dem Verkäufer.\nBewahren Sie Professionalität in Ihrer Kommunikation und haben Sie Geduld, da Support-Teams oft ein hohes Anfrageaufkommen bewältigen müssen.","undefined#Vorlage":"Sie können diese Textvorlage verwenden, um den Tebex-Support zu kontaktieren:\nDear Tebex Support Team,\nI hope this message finds you well. I am writing to request a refund for a recent purchase made on Tebex.io. I have taken the necessary steps to resolve this matter with the seller, but unfortunately, I have received neither a response nor a satisfactory solution.\nOrder Details:\nOrder Number: [Order]\nService: Trusted-Studios / https://shop.trusted-studios.eu\nReason for Refund Request:\n[Clearly and concisely explain the reason for your refund request. Include all relevant information that could assist Tebex in resolving the issue.]\nI have attached [relevant supporting documents, if applicable] to further support my refund request.\nI understand that Tebex values the satisfaction of its customers, and I am confident that a fair solution can be achieved with your assistance. I kindly request your intervention to facilitate the refund process in this situation.\nI appreciate your attention to this matter in advance and am available if further information is required on my end.\nBest regards,\n[Your Name]\n[Your Contact Information]\nIf you would like to return your product, please follow the instructions below.","undefined#Option 1: Contact Us":"Your first action should be to contact us either via Discord or by email.\nOpen a ticket on our Discord Server\nSend this completed template:\n    Order Number: [Order]\n    Reason for the refund request:\n#Contact Tebex\nEmail to support@trusted-studios.eu\nMake sure to professionally describe your issue and provide reasons for returning the product. In most cases, issues can be resolved for mutual benefit.","undefined#Option 2: Contact Tebex Support":"!!! If the seller does not respond or refuses a refund despite legitimate reasons, your next step is to contact Tebex Support. !!!\nWrite an email to support@tebex.io.\nInclude all relevant details of your transaction – the seller's name, the product, your order number, and the reason for your refund request.\nAttach any supporting documents that could strengthen your claim, including communication between you and the seller.\nMaintain professionalism in your communication and be patient, as support teams often have to handle a high volume of requests.","undefined#Template":"You can use this text template to contact Tebex Support:\nDear Tebex Support Team,\nI hope this message finds you well. I am writing to request a refund for a recent purchase made on Tebex.io. I have taken the necessary steps to resolve this matter with the seller, but unfortunately, I have received neither a response nor a satisfactory solution.\nOrder Details:\nOrder Number: [Order]\nService: Trusted-Studios / https://shop.trusted-studios.eu\nReason for Refund Request:\n[Clearly and concisely explain the reason for your refund request. Include all relevant information that could assist Tebex in resolving the issue.]\nI have attached [relevant supporting documents, if applicable] to further support my refund request.\nI understand that Tebex values the satisfaction of its customers, and I am confident that a fair solution can be achieved with your assistance. I kindly request your intervention to facilitate the refund process in this situation.\nI appreciate your attention to this matter in advance and am available if further information is required on my end.\nBest regards,\n[Your Name]\n[Your Contact Information]"}},"/fivem/simple-car-wash/1_Introduction":{"title":"FiveM FiveM Simple Car Wash","data":{"":"The car wash script provides a sponge item, wich enables players to wash their cars.","installation#Installation":"","download#Download":"Download the script from GitHub","installation-1#Installation":"Drag and Drop the resource into your server-files and go to the configuration file located at /conig.lua.","configuration#Configuration":"Please make sure to configure the script to your need to ensure the best experience. More information can be found here."}},"/fivem/simple-car-wash/2_Config":{"title":"Configuration","data":{"sponge-item#Sponge Item":"The item needed to wash a car.\nConfig.SpongeItem = 'sponge'\nSpongeItem: string","washtime#WashTime":"The total time in ms it will take to wash a car. The time is spilt in 4 as the player will wash 4 parts of a vehicle.\nConfig.WashTime = 10000 -- (10 Seconds)\nWashTime: number"}},"/fivem/trucker-plus":{"title":"FiveM Trucker Job Plus","data":{}},"/fivem/trucker-plus/1_Introduction":{"title":"FiveM Advanced Trucker Job (V3)","data":{"":"The Advanced Trucker Job (V3), created by the Trusted Studios team, offers numerous immersive player experiences, all aimed at significantly enhancing the players' RP experiences.","installation#Installation":"","purchase#Purchase":"To purchase the Script, go to the Shop and purchase it.","download#Download":"After the purchase tebex will send you an email whereupon you can download the script from Keymaster","installation-1#Installation":"Drag and Drop the resource into your server-files and go to the configuration file located at /conig.lua or /configs/routes/*.lua.","configuration#Configuration":"Please make sure to configure the script to your need to ensure the best experience. More information can be found here."}},"/fivem/trucker-plus/2_Config":{"title":"Config","data":{"framework#Framework":"To ensure that the script integrates seamlessly with your server, you'll have to set the framework you're using.\nConfig.Framework = \"ESX\"\nConfig.Framework = \"OX\"\nConfig.Framework = \"Other\"\nFramework: string (the name of your framework)","need-job#Need Job":"If you want to require a job to access the trucker job, you can set the following configuration.\nConfig.NeedJob = true\nNeedJob: boolean (true/false)","disable-damage#Disable Damage":"If you want to disable damage for the trucker job, you can set the following configuration.\nConfig.DisableDamage = true\nDisableDamage: boolean (true/false)","disable-default-notify#Disable Default Notify":"If you want to disable the default notification that appears when you start a mission, you can set the following configuration. You will then be able to add your own notification with an extention event.\nConfig.DisableDefaultNotify = false\nDisableDefaultNotify: boolean (true/false)","depot#Depot":"The script utilizes depots to determin the starting and ending points of a mission. You can set the following configuration to add, change or remove depots.\nConfig.Depot = {\n    [\"Depot Name\"] = {\n        coords = vec4(-238.94, -1397.82, 31.28, 263.53),\n        truckSpawn = vec4(-224.03, -1368.86, 31.26, 166.37),\n        blip = {\n            id = 477,\n            scale = 0.8,\n            color = -1\n        }\n    },\n    ...\n}\nDepot: table\n[Depot Name: string]: table\ncoords: vec4 (x, y, z, heading)\ntruckSpawn: vec4 (x, y, z, heading)\nblip:? table (is not required)\nid: number\nscale: number (should always be a decimal number / float)\ncolor: number","npc#NPC":"The script utilizes NPCs to give the player missions. You can set the following configuration to add, change or remove NPCs. The script will the proceed to randomly select one of the NPCs to give the player a mission.\nConfig.NPC = {\n    \"s_m_m_autoshop_01\",\n    \"s_m_m_dockwork_01\",\n    \"s_m_m_hairdress_01\",\n}"}},"/fivem/trucker-plus/extentions/client":{"title":"Extentions","data":{"":"Our script provides a way to extend the functionality of the script. This can be done by editing the ext.lua file in the client or server folder with the following code snippet:","notify#Notify":"AddEventHandler(\"Trusted:Trucker:Client:Notify\", function(message, type, duration)\n    --- implement extention code\nend)\nmessage: string (the message to display)\ntype: \"error\"|\"warning\"|\"success\"\nduration: number (the duration of the notification)","truck-spawned#Truck Spawned":"AddEventHandler('Trusted:Trucker:Client:TruckSpawned', function(entity, route)\n    --- implement code here\nend)\nentity: number (the entity of the truck)\nroute: string (the route name)","goods-loaded#Goods Loaded":"AddEventHandler('Trusted:Trucker:Client:GoodsLoaded', function(entity, route)\n    --- implement code here\nend)\nentity: number (the entity of the truck)\nroute: string (the route name)","goods-unloaded#Goods Unloaded":"AddEventHandler('Trusted:Trucker:Client:GoodsUnloaded', function(entity, route)\n    --- implement code here\nend)\nentity: number (the entity of the truck)\nroute: string (the route name)","truck-deleted#Truck Deleted":"AddEventHandler('Trusted:Trucker:Client:TruckDeleted', function(entity, route)\n    --- implement code here\nend)\nentity: number (the entity of the truck)\nroute: string (the route name)","trailer-spawned#Trailer Spawned":"AddEventHandler('Trusted:Trucker:Client:TrailerSpawned', function(entity, route)\n    --- implement code here\nend)\nentity: number (the entity of the trailer)\nroute: string (the route name)","trailer-deleted#Trailer Deleted":"AddEventHandler('Trusted:Trucker:Client:TrailerDeleted', function(entity, route)\n    --- implement code here\nend)\nentity: number (the entity of the trailer)\nroute: string (the route name)"}},"/fivem/trucker-plus/extentions/server":{"title":"Extentions","data":{"":"Our script provides a way to extend the functionality of the script. This can be done by editing the ext.lua file in the client or server folder with the following code snippet:","cheat-prevention#Cheat Prevention":"This event will be triggered when the following checks failed:\nthe money the player passed to the server is not the same as the money the server reads in the server-side instance of the config\nthe player is not using a player owned truck and isn't near the depot location (where a mission is supposed to end)\nAddEventHandler(\"Trusted:Trucker:Server:PlayerCheating\", function(source)\n    --- implement code here\nend)\nsource: number (the player's server id)"}},"/fivem/trucker-plus/routes/mission_type_1":{"title":"Mission Type 1 - Configuration","data":{"":"The first mission type, is the most simple one. A player get's a truck drives to a location, pickups the cargo and delivers it to the destination. The player will be rewarded with money for completing the mission.\nDuring the mission the player will not be required to do anything special.","routes#Routes":"This config option is the heart of any mission and will determine how the mission will behave. It is highly recommended to have ONE MISSION per file.\nConfig.Routes[\"Depot Name\"][\"Mission Name\"] = {\n    rewardMoney = 1000,\n    rewardType = \"money\",\n    rewardLevel = 5,\n    requiredLevel = 1,\n    pickup = {\n        vec3(-250.59, -248.18, 36.52),\n        vec3(-174.09, -1429.42, 31.23),\n        vec3(835.98, -1934.71, 28.96),\n    },\n    deliver = {\n        vec3(742.22, -667.25, 27.79),\n        vec3(-215.13, -2484.84, 6.00),\n        vec3(874.80, -1530.75, 30.19),\n        vec3(745.00, -966.39, 24.62),\n    }\n}\nRoutes <> [Depot Name: string][Mission Name: string]: table\nrewardMoney: number\nrewardType: string\nrewardLevel: number\nrequiredLevel: number\npickup: table\nvec3(x, y, z): vector3 (multiple locations can be added, one will be selected randomly)\ndeliver: table\nvec3(x, y, z): vector3 (multiple locations can be added, one will be selected randomly)\nPlease note that the coords within the pickup and deliver tables, will have to be vector3 (x, y, z) and not vector4 (x, y, z, heading). This ensures that the mission type 1 will work correctly.","trucks#Trucks":"When players borow a truck to complete the mission, the script will randomly select one of the trucks from the list below. The player will have to use the selected truck to complete the mission.\nConfig.Trucks[\"Mission Name\"] = {\n    'mule',\n    'mule2',\n    'flatbed'\n}\nTrucks <> [Mission Name: string]: table\ntruckName: string (multiple trucks can be added, one will be selected randomly)\nPlease make sure that the mission name is the same as the one used in Config.Routes, otherwise the script will break."}},"/fivem/trucker-plus/routes/mission_type_3":{"title":"Mission Type 3 - Configuration","data":{"":"The third mission type utilizes trailers to transport the cargo. The player will have to reverse the truck into the trailer to load the cargo and then deliver it to the destination. The player will be rewarded with money for completing the mission.","routes#Routes":"This config option is the heart of any mission and will determine how the mission will behave. It is highly recommended to have ONE MISSION per file.\nConfig.Routes[\"Depot Name\"][\"Mission Name\"] = {\n    rewardMoney = 1000,\n    rewardType = \"money\",\n    rewardLevel = 5,\n    requiredLevel = 1,\n    pickup = {\n        vec4(-250.59, -248.18, 36.52, 00.00),\n        vec4(-174.09, -1429.42, 31.23, 32.42),\n        vec4(835.98, -1934.71, 28.96, 177.72),\n    },\n    deliver = {\n         vec4(742.22, -667.25, 27.79, 83.04),\n        vec4(-215.13, -2484.84, 6.00, 92.13),\n        vec4(874.80, -1530.75, 30.19, 232.93),\n        vec4(745.00, -966.39, 24.62, 270.08),\n    }\n}\nRoutes <> [Depot Name: string][Mission Name: string]: table\nrewardMoney: number\nrewardType: string\nrewardLevel: number\nrequiredLevel: number\npickup: table\nvec4(x, y, z, heading): vector4 (multiple locations can be added, one will be selected randomly)\ndeliver: table\nvec4(x, y, z, heading): vector4 (multiple locations can be added, one will be selected randomly)\nPlease note that the coords within the pickup and deliver tables, will have to be vector4 (x, y, z, heading) and not vector3 (x, y, z). This ensures that the mission type 2 will work correctly.","trucks#Trucks":"When players borow a truck to complete the mission, the script will randomly select one of the trucks from the list below. The player will have to use the selected truck to complete the mission.\nConfig.Trucks[\"Mission Name\"] = {\n    'phantom',\n    'packer',\n    'hauler',\n}   \nTrucks <> [Mission Name: string]: table\ntruckName: string (multiple trucks can be added, one will be selected randomly)\nPlease make sure that the mission name is the same as the one used in Config.Routes, otherwise the script will break.","trailers#Trailers":"The script will randomly select one of the trailers from the list below. The player will have to use the selected trailer to complete the mission.\nConfig.Trailers['Mission Name'] = {\n    'trailerlogs',\n    'tr4',\n    'trflat',\n}\nTrailers <> [Mission Name: string]: table\ntrailerName: string (multiple trailers can be added, one will be selected randomly)\nPlease make sure that the mission name is the same as the one used in Config.Routes, otherwise the script will break."}},"/fivem/trucker-plus/routes/mission_type_2":{"title":"Mission Type 2 - Configuration","data":{"":"The second mission type is a bit more complex than the first one. The player will have to do some extra work to complete the mission. The player will have reverse into the loading area to load the cargo onto the truck and then deliver it to the destination repeating the same process. The player will be rewarded with money for completing the mission.","routes#Routes":"This config option is the heart of any mission and will determine how the mission will behave. It is highly recommended to have ONE MISSION per file.\nConfig.Routes[\"Depot Name\"][\"Mission Name\"] = {\n    rewardMoney = 1000,\n    rewardType = \"money\",\n    rewardLevel = 5,\n    requiredLevel = 1,\n    pickup = {\n        vec4(-250.59, -248.18, 36.52, 00.00),\n        vec4(-174.09, -1429.42, 31.23, 32.42),\n        vec4(835.98, -1934.71, 28.96, 177.72),\n    },\n    deliver = {\n         vec4(742.22, -667.25, 27.79, 83.04),\n        vec4(-215.13, -2484.84, 6.00, 92.13),\n        vec4(874.80, -1530.75, 30.19, 232.93),\n        vec4(745.00, -966.39, 24.62, 270.08),\n    }\n}\nRoutes <> [Depot Name: string][Mission Name: string]: table\nrewardMoney: number\nrewardType: string\nrewardLevel: number\nrequiredLevel: number\npickup: table\nvec4(x, y, z, heading): vector4 (multiple locations can be added, one will be selected randomly)\ndeliver: table\nvec4(x, y, z, heading): vector4 (multiple locations can be added, one will be selected randomly)\nPlease note that the coords within the pickup and deliver tables, will have to be vector4 (x, y, z, heading) and not vector3 (x, y, z). This ensures that the mission type 2 will work correctly.","trucks#Trucks":"When players borow a truck to complete the mission, the script will randomly select one of the trucks from the list below. The player will have to use the selected truck to complete the mission.\nConfig.Trucks[\"Mission Name\"] = {\n    'pounder'\n}\nTrucks <> [Mission Name: string]: table\ntruckName: string (multiple trucks can be added, one will be selected randomly)\nPlease make sure that the mission name is the same as the one used in Config.Routes, otherwise the script will break."}},"/":{"title":"Introduction","data":{"":"Trusted Studios is a leading provider of custom scripts, ready-made products, and various modding tools. We specialize in delivering high-quality solutions for the gaming community.With our team of experienced developers and modders, we aim to provide innovative and reliable products that enhance the gaming experience.","our-services#Our Services":"Custom Scripts: We offer tailor-made scripts designed to meet your specific needs. Whether you're looking for a unique gameplay feature or a custom game mode, our team can bring your ideas to life.\nReady-Made Products: We provide a range of pre-built products that can be easily integrated into your game. From advanced AI systems to immersive UI frameworks, our ready-made products offer efficient solutions.\nModding Tools: Our collection of modding tools empowers developers and modders to create their own customizations and modifications. We offer tools for asset creation, scripting, and more.","why-choose-trusted-studios#Why Choose Trusted Studios?":"Expertise: Our team consists of skilled developers with a deep understanding of modding and scripting. We have a proven track record of delivering high-quality products.\nCustomization: We understand that every project is unique. That's why we offer personalized solutions that align with your specific requirements.\nReliability: We prioritize stability and reliability in our products. You can trust that our scripts and tools will perform optimally, enhancing your gaming experience.\nCustomer Support: Our dedicated support team is available to assist you with any technical issues or inquiries. We value our customers and strive to provide excellent support."}},"/fivem/basic-job_garage/2_Config":{"title":"Configurations","data":{"":"The following config has been designed to provide highly flexible settings, allowing users to customize the script according to their specific needs. With its adjustable parameters, this script aims to cater to a wide range of requirements and ensure optimal adaptability.","framework#Framework":"Defines the used Framework to allow the Script to be used on more servers. Frameworks which are supported by default are ESX Legacy, QBCore and Standalone. If you want to add your own Framework you can use bridge functions to do so. More information about the Bridge can be found here.\nConfig.Framework = \"ESX\"\nConfig.Framework = \"Standalone\"\nConfig.Framework = \"Other\"\nframeworkName: string\nPlease keep in mind that the script has only been tested with ESX Legacy. Thus the QBCore Version is only available at you own risk. If you want to make changes to the QBCore code you can do so in the Bridge section. More information about the Bridge can be found here.","garages#Garages":"This is the main configuration as it defines new garages and their properties. We have implemented intelligent logic that seamlessly adapts to changes made to individual components during runtime, ensuring that the script remains functional even when certain components are modified or removed.\n[\"police\"] = {\n    Label = \"Police Garage\",\n    Job = 'police', \n    Coords = vec3(0, 0, 0),\n    SpawnCoords = vec4(0, 0, 0, 0), \n    Blip = {\n        id = 1, \n        scale = 0.8, \n        colour = -1,\n    },\n    Vehicles = {\n        ['police'] = {\n            label = 'Police Interceptor',\n            grade = 2, \n            defaultExtras = {\n                [1] = true, \n                [4] = true, \n                [12] = true\n            }\n        },\n    }\n},\n[\"mechanic\"] = {\n    Label = \"Mechanic Garage\",\n    Coords = vec3(0, 0, 0),\n    Vehicles = {\n        ['towtruck'] = 'Tow Truck'\n    }\n}\nName of the garage (Key): table\nLabel: string\nJob?: string\nCoords: vec3\nSpawnCoords?: vec4\nBlip?: table\nid: number\nscale: number\ncolour: number\nVehicles: table\nvehicle spawn name (Key): table or string (vehicle label)\nlabel: string\ngrade: number\ndefaultExtras: table\nKey (Number): boolean"}},"/fivem/farming/2_Config":{"title":"Configurations","data":{"":"The Farming Script has been meticulously designed to provide developers with the flexibility to customize each component according to their preferences, without compromising the integrity of the script. We have implemented intelligent logic that seamlessly adapts to changes made to individual components during runtime, ensuring that the script remains functional even when certain components are modified or removed.For instance, if you wish to establish a hidden and discreet illegal farming location without a visible blip on the map, you can easily achieve this by removing the blip component from the config table. By eliminating the blip, players will have a harder time locating the farming spot, enhancing the secrecy and challenge of the activity.\nPlease note that not every component can be removed. Components that can be removed will be marked with a '?' symbol following their name (e.g., Blip?).","random-crafting-requirements-interval#Random Crafting Requirements Interval":"Random amounts of crafting requirements will be updated after each interval.\nConfig.RandomCraftingInterval = 60\nRandomCraftingInterval: number -> in minutes","farming-positions#Farming Positions":"By adding a table with components inside Config.Farming, you can include a new farming location.\nConfig.Farming = {\n    {\n        Blip = { \n            type = 1, \n            scale = 0.8, \n            color = -1, \n            label = 'Farming' \n        },\n        Zone = { \n            coords = vec3(2226.71, 5577.86, 53.71), \n            radius = 15 \n        },\n        Item = { \n            label = 'Potato', \n            name = 'potato', \n            count = {min = 1, max = 3}, \n        }, \n        CollectTime = 15, \n        Animation = 'WORLD_HUMAN_GARDENER_PLANT' \n    },\n    ...\n}\nBlip?: table\nCreates a blip on the map if added as a component.\ntype: number\nscale: number,\ncolor: number\nlabel: string\nexample:\nBlip = {\n    type = 1,\n    scale = 0.8,\n    color = -1, \n    label = 'Farming'\n},\nZone: table\nDefines the location and the radius in wich the player can start to farm.\ncoords: vec3\nradius: number\nexample:\nZone = {\n    coords = vec3(2226.71, 5577.86, 53.71), \n    radius = 15 \n},\nItem: table\nDefines the item wich will be farmed by the player.\nlabel: string (the item label from your DB)\nname: string (the item name from your DB)\ncount: table or number\nexample:\nItem = { \n    label = 'Potato', \n    name = 'potato', \n    count = {min = 1, max = 3}, --> random number in this range\n},\nItem = { \n    label = 'Potato', \n    name = 'potato', \n    count = 2, \n},\nCollectTime: number\nAnimation: string\nPlease be aware that you have the ability to add an unlimited number of farming positions. However, it's important to consider that having a large number of locations may impact performance.","crafting#Crafting":"In the following configuration, you can define new crafting locations.\nConfig.Process = {\n    {\n        Blip = { \n            type = 792,  \n            scale = 0.8, \n            color = -1,\n            label = 'Potato salad (crafting)' \n        },\n        Coords = vec4(30.09, 6445.48, 31.43, 226.12),\n        Ped = 's_m_m_migrant_01',\n        ItemCrafting = {\n            {\n                required = {\n                    {label = 'Potato', name = 'potato', amount = 4}, \n                    {label = 'Egg', name = 'egg', amount = {min = 2, max = 6}}, \n                },\n                crafted = {\n                    label = 'Potato Salad',\n                    name = 'potato_salad',\n                    amount = 1\n                }, \n                CraftingTime = 15\n            }\n        }\n    },\n    ...\n}\nBlip?: table\nCreates a blip on the map if added as a component.\ntype: number\nscale: number,\ncolor: number\nlabel: string\nexample:\nBlip = {\n    type = 1,\n    scale = 0.8,\n    color = -1, \n    label = 'Farming'\n},\nCoords: vec4\nPed: string\nItemCrafting: table\nContains all crafting components.\nrequired: table\nContains a table of entries wich represents the items required to craft.\nlabel: string\nname: string\namount: number | table<min: number, max: number> -> choose if you want an predefined or randomised amount of required items.\nexample:\nrequired = {\n    {label = 'Potato', name = 'potato', amount = 4}, \n    {label = 'Egg', name = 'egg', amount = 2},\n    ...\n}\ncrafted: number\nContains the item information that will be crafted.\nlabel: string\nname: string\namount: number\nexample:\ncrafted = {\n    label = 'Potato Salad',\n    name = 'potato_salad',\n    amount = 1\n}\nCraftingTime: number\nPlease be aware that you have the ability to add an unlimited number of crafting positions. However, it's important to consider that having a large number of locations may impact performance.","sellpoints#Sellpoints":"In the given configuration, you can define new locations where you can sell items.\nConfig.SellPoints = {\n    {\n        Blip = { \n            type = 792,  \n            scale = 0.8, \n            color = -1,\n            label = 'Potato Salad seller' \n        },\n        Coords = vec4(1218.78, 1848.65, 78.97, 223.92),\n        Ped = 's_m_y_waretech_01', \n        Items = {\n            {label = 'Potato Salad', name = 'potato_salad', reward = 1000, black = false}, \n        }\n    },\n    ...\n}\nBlip?: table\nCreates a blip on the map if added as a component.\ntype: number\nscale: number,\ncolor: number\nlabel: string\nexample:\nBlip = {\n    type = 1,\n    scale = 0.8,\n    color = -1, \n    label = 'Potato Salad seller'\n},\nCoords: vec4\nPed: string\nItems: table\nDefines the items the player can sell.\nlabel: string\nname: string\nreward: number\nblack: boolean\nPlease be aware that you have the ability to add an unlimited number of crafting positions. However, it's important to consider that having a large number of locations may impact performance.","shops#Shops":"The following config enables you to add specific shops if you need them but we don't recomend them to be used as your main shops!\nPlease DO NOT use these shops as your primary shops!\nConfig.Shops = {\n    {\n        Blip = {\n            type = 1, \n            scale = 0.8, \n            color = -1,\n            label = 'Apotheke'\n        },\n        Coords = vec4(68.95, -1570.01, 29.60, 50.0),\n        Ped = 's_m_m_doctor_01',\n        Items = {\n            {label = 'Egg', name = 'egg', price = 14, count = 1},\n        }\n    },\n    ...\n}\nBlip?: table\nCreates a blip on the map if added as a component.\ntype: number\nscale: number,\ncolor: number\nlabel: string\nexample:\nBlip = {\n    type = 1,\n    scale = 0.8,\n    color = -1, \n    label = 'Potato Salad seller'\n},\nCoords: vec4\nPed: string\nItems: table\nDefines the items the player can sell.\nlabel: string\nname: string\nprice: number\ncount: number (the amount of items given per purchase)\nPlease be aware that you have the ability to add an unlimited number of crafting positions. However, it's important to consider that having a large number of locations may impact performance.","text-locales#Text (Locales)":"Locales enables you to translate display-texts in your native language.\nConfig.Text = {\n    ['start_farming'] = 'Drücke ~INPUT_CONTEXT~ um ~y~%s~s~ zu sammeln.',\n    ['open_craft_menu'] = 'Drücke ~INPUT_CONTEXT~ um die Verarbeitungsstelle zu verwalten.',\n    ['open_sell_menu'] = 'Drücke ~INPUT_CONTEXT~ um die Verkaufsstelle zu verwalten.',\n    ['open_shop_menu'] = 'Drücke ~INPUT_CONTEXT~ um den Shop zu verwalten.',\n    ['error'] = '~r~Ein Fehler ist aufgetreten!',\n    ['weight_limit_exceeded'] = '~r~Du hast nicht mehr die nötigen Kapazitäten um diese Items aufzunehmen!', \n    ['farming_succeded'] = 'Du hast erfolgreich ~y~%sx %s~s~ gesammelt!',\n    ['craft_in_progress'] = '~r~Du bist bereits dabei etwas zu verarbeiten!',\n    ['not_enougth_items'] = '~r~Du hast nicht die nötigen Items um zu verarbeiten!',\n    ['started_crafting'] = 'Du hast mit der Herstellung von ~y~%s~s~ begonnen...',\n    ['crafting_succeeded'] = 'Du hast erfolgreich ~y~%sx %s~s~ hergestellt.',\n    ['items_needed'] = \"Benötigte Items:\",\n    ['already_crafting'] = \"Du bist bereits dabei etwas zu verarbeiten!\",\n    ['amount'] = 'Menge',\n    ['price'] = 'Preis',\n    ['purchase_suceeded'] = 'Kauf wurde erfolgreich abgeschlossen!',\n    ['not_enougth_money'] = '~r~Du hast nicht genügend Geld!',\n    ['wrong_amount'] = '~r~Gebe bitte ein vernünftige Zahl ein!',\n    ['not_enougth_items_to_sell'] = '~r~Du besitzt nicht die Summe an Items, die du verkaufen möchtest!',\n    ['sell_succeeded'] = 'Du hast ~y~%sx %s~s~ für ~g~$%s~s~ verkauft!',\n    ['processing'] = 'Verarbeitung läuft...',\n    ['menu_worker_title'] = 'Verarbeitung',\n    ['menu_worker_subtitle'] = '~b~Verarbeite deine Produkte :D',\n    ['menu_sell_title'] = 'Verkauf',\n    ['menu_sell_subtitle'] = '~b~Verkaufe deine Produkte :D',\n    ['menu_shop_title'] = 'Shop',\n    ['menu_shop_subtitle'] = '~b~Kaufe deine Produkte :D'\n}\ntranslation: string\nDo NOT change the key (for example ['start_farming']) or your translations will not work!","custom-visuals#Custom Visuals":"This configurations will override some visual components to match your server's UI.\nDo NOT use this config if you don't know what you're doing! We will not support you if you're messing with these configurations!\nCofnig.CustomVisual = {\n    Enabled = false, \n    ShowHelp = function(text, bleep)\n        ---@add: custom show help functionality\n    end,\n    Notify = function(text)\n        ---@add: custom notify \n    end\n}\nEnabled: boolean\nShowHelp: function\nOverrides the scripts ShowHelp function. Please keep in mind that this function is called every frame!\ntext: string (the text wich will be displayed)\nbleep: boolean (if a sound should be played)\nNotify: function\nOverrides the scrtips Notify function.\ntext: string (the text wich will be displayed)\nIf the config is enabled both functions will be overwritten!"}},"/fivem/job_garage/2_Config":{"title":"Configurations","data":{"":"The following config has been designed to provide highly flexible settings, allowing users to customize the script according to their specific needs. With its adjustable parameters, this script aims to cater to a wide range of requirements and ensure optimal adaptability.","framework#Framework":"Defines the used Framework to allow the Script to be used on more servers. Frameworks which are supported by default are ESX Legacy, QBCore and Standalone. If you want to add your own Framework you can use bridge functions to do so. More information about the Bridge can be found here.\nConfig.Framework = \"ESX\"\nConfig.Framework = \"Standalone\"\nConfig.Framework = \"Other\"\nframeworkName: string\nPlease keep in mind that the script has only been tested with ESX Legacy. Thus the QBCore Version is only available at you own risk. If you want to make changes to the QBCore code you can do so in the Bridge section. More information about the Bridge can be found here.","lock-distance#Lock Distance":"Defines the max distance within wich the player can lock or unlock a car.\nConfig.LockDistance = 3","default-lock-key#Default Lock Key":"This Script uses Keymappings to make sure that every player can individually dicide wich key they want to map to lock their cars. This config determines the default key, that can later be changed by the player.\nConfig.DefaultLockKey = \"L\"","garages#Garages":"This is the main configuration as it defines new garages and their properties. We have implemented intelligent logic that seamlessly adapts to changes made to individual components during runtime, ensuring that the script remains functional even when certain components are modified or removed.\nPlease note that not every component can be removed. Components that can be removed will be marked with a '?' symbol following their name (e.g., Blip?).\nConfig.Garages = {\n    [\"police\"] = {\n        Label = \"Police Garage\",\n        Job = 'police', \n        Coords = vec4(459.08, -1017.17, 28.15, 94.46),\n        PedModel = 's_m_m_ciasec_01',  \n        SpawnCoords = vec4(446.03, -1025.89, 28.65, 358.07), \n        Blip = {\n            id = 1, \n            scale = 0.8, \n            colour = -1,\n        },\n        Vehicles = {\n            ['police'] = {\n                label = 'Police Interceptor',\n                grade = 5, \n                defaultExtras = {\n                    [1] = true, \n                }\n            },\n            ['police2'] = {\n                label = 'Police Interceptor 2',\n                grade = 10, \n                livery = 1,\n                defaultExtras = {\n                    [1] = true, \n                    [12] = true,\n                },\n                modKits = {\n                    [11] = 5,\n                    [12] = 4\n                }\n            },\n        }\n    },\n    ...\n}\nEvery Garage is identified by its key. The key represents the garage and contains all the options.\nLabel: string\nJob?: string\nCoords: vector3 or vector4\nPedModel?: string\nSpawnCoords?: vector4\nBlip?: table\nCreates a blip on the map if added as an option.\nid: number\nscale: number,\ncolor: number\nexample:\nBlip = {\n    id = 1, \n    scale = 0.8, \n    colour = -1,\n},\nVehicles: table\nContains a list of every vehicle in the garage.\nEvery vehicle is represented via a key, value pair. This means that the vehicle spawn name is registered within it's key (e.g ['police']) and all the options in the value wich are within a table.\nlabel: string\ngrade?: number (the grade required to use the vehicle)\nlivery?: number\ndefaultExtras?: table\nEvery entry in the defaultExtras table is registered as a key, value pair. This means that the extra you want to enable should have a key with a number (e.g. [1]) and the value true.\nexample:\ndefaultExtras = {\n    [1] = true, \n    [12] = true,\n    ...\n}\nmodKits?: table\nEvery entry in the modKits table is registered as a key, value pair. This means that the modkit you want to enable should have a key with a number (e.g. [1]) and the index of the modkit as the value.\nYou can find our more about modkits here\nexample:\nmodKits = {\n    [11] = 5,\n    [12] = 4\n}\nexample:\nVehicles = {\n    ['police'] = {\n        label = 'Police Interceptor',\n        grade = 5, \n    },\n    ['police2'] = {\n        label = 'Police Interceptor 2',\n        grade = 10, \n        defaultExtras = {\n            [1] = true, \n            [12] = true,\n        }\n    },\n    ...\n}\nThe Lightweight Option is basicaly the same as Standart just without any fancy stuff.\nConfig.Garages = {\n    [\"Bus\"] = {\n        Label = \"Bus Garage\",\n        Job = 'busdriver', \n        Coords = vec3(421.24, -1011.02, 29.13),\n        Vehicles = {\n            ['bus'] = 'Bus'\n        }\n    },\n    ...\n}\nEvery Garage is identified by its key. The key represents the garage and contains all the options.\nLabel: string\nJob?: string\nCoords: vector3\nVehicles: table\nContains a list of every vehicle in the garage.\nEvery vehicle is represented via a key, value pair. This means that the vehicle spawn name is registered within it's key (e.g ['police']) and all the label in the value.\nlabel (value): string\nexample:\nVehicles = {\n    ['bus'] = 'Bus',\n    ...\n}"}}}